%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.1%%For: (Sigal Suhler Moran) ()%%Title: (UrbanConnectedCity.eps)%%CreationDate: 9/12/13 12:19 PM%%BoundingBox: 0 0 612 612%%HiResBoundingBox: 0 0 612 612%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.3 0.3 0.3 1 (Black)%%+ 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 306.5 305.5 306.5 305.5%AI3_TileBox: 18 -50 594 684%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 612%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -212.6318 614 1.52 1666 964 26 1 0 8 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 18 1 18 1 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MP%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp1 Bn%AI5_BeginGradient: (Unnamed gradient 86)(Unnamed gradient 86) 1 2 Bd[<0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A><B3B1B0AFAEADACABAAA9A8A7A6A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787877767574737271706F6E6D6C6B6A69686766656564636261605F5E5D5C5B5A59585757565554535251504F4E4D4C4C4B4A49484746454443424241403F3E3D3C3B3A3A39383736353433333231302F2E2D2D2C2B2A2928272726252423222221201F1E1E1D1C1B1A1A191817161615141313121110100F0E0D0D0C0B0B0A0909080707060505><E6E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCDCCCCCCCBCBCACACAC9C9C9C8C8C7C7C7C6C6C6C5C5C4C4C4C3C3C3C2C2C1C1C1C0C0C0BFBFBEBEBEBDBDBDBCBCBCBBBBBABABAB9B9B9B8B8B8B7B7B6B6B6B5B5B5B4B4B4B3B3B3B2B2B2B1B1B1B0B0B0AFAFAEAEAEADADADACACACABABABABAAAAAAA9A9A9A8A8A8A7A7A7A6A6A6A5A5A5A5A4A4A4A3A3A3A3A2A2A2A1A1A1A1A0A0A0>01 %_Br[0.05 0.7 0.9 0 1 46.0674 0 %_BS%_0.05 0.7 0.9 0 1 46.0674 0 Bs0.0392 0.0196 0.6275 0 1 50 100 %_BS%_0.0392 0.0196 0.6275 0 1 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0.3 0.3 0.3 1 (Black) 0 0 Xk(Black)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 5 255 79 255 0 50 Lb(Layer) Ln0 A0 O0.39 0 1 0.19 k0 J 0 j 1 w 4 M []0 d0 XR371.5195 106.0859 m371.5195 123.9492 357.9775 141.3447 Y344.6689 124.2363 344.6689 106.0068 v344.6689 93.4326 349.5029 82.999 355.7773 80.8604 C355.8203 68.5791 L360.623 68.5791 L360.582 80.8721 L366.8428 83.0537 371.5195 93.5117 371.5195 106.0859 cf0.356863 0.12549 1 0 k339.4639 107.5273 m339.4697 121.0244 332.2607 138.5615 323.3652 138.5654 c314.4678 138.5654 307.249 121.0361 307.2422 107.5381 c307.2402 95.3379 313.1367 85.2549 320.8398 83.4229 C320.3076 68.8994 L326.1563 68.8965 L325.7373 83.3955 L333.4961 85.1484 339.46 95.2666 339.4639 107.5273 cf0.39 0 1 0.19 k311.6035 107.4844 m311.6035 126.0127 297.5571 144.0576 Y283.7539 126.3115 283.7539 107.4014 v283.7539 94.3594 288.7656 83.5361 295.2754 81.3184 C295.3188 68.5791 L300.3008 68.5791 L300.2573 81.3311 L306.7529 83.5928 311.6035 94.4414 311.6035 107.4844 cf0.356863 0.12549 1 0 k404.2959 104.3193 m404.2959 121.0557 391.5234 137.3555 Y378.9727 121.3262 378.9727 104.2451 v378.9727 92.4648 383.5303 82.6895 389.4492 80.6836 C389.4893 69.1758 L394.0195 69.1758 L393.9775 80.6953 L399.8848 82.7383 404.2959 92.5391 404.2959 104.3193 cf0.55 0.05 1 0.32 k387.7646 106.7031 m387.7646 124.5566 372.9902 141.9463 Y358.4707 124.8447 358.4707 106.624 v358.4707 94.0557 363.7422 83.626 370.5879 81.4873 C370.6367 69.2119 L375.8779 69.2119 L375.8291 81.5 L382.6631 83.6797 387.7646 94.1348 387.7646 106.7031 cf1 Ap0.39 0 1 0.19 k404.5732 52.0938 m258.3281 52.0938 L258.3281 70.4092 L404.5732 70.4092 L404.5732 52.0938 Lf0 Ap0.356863 0.12549 1 0 k192.1528 174.2334 m192.1572 185.8271 186.5176 200.8906 179.5566 200.8936 c172.5957 200.8936 166.9468 185.8369 166.9414 174.2422 c166.9395 163.7637 171.5527 155.1025 177.5806 153.5283 C177.1646 141.0537 L181.7402 141.0508 L181.4131 153.5049 L187.4834 155.0107 192.1504 163.7021 192.1528 174.2334 cf0.39 0 1 0.19 k178.7881 174.1963 m178.7881 190.1123 166.7227 205.6113 Y154.8662 190.3682 154.8662 174.126 v154.8662 162.9229 159.1709 153.626 164.7627 151.7207 C164.7998 140.7783 L169.0791 140.7783 L169.042 151.7314 L174.6221 153.6748 178.7881 162.9932 178.7881 174.1963 cfu1 D0.8 0.1 0.45 0.21 k436.9912 181 m436.9912 52.0938 L398.1064 52.0938 L398.1064 181 L436.9912 181 Lfu0 D0.4 0.05 0.225 0 k428.4512 95.667 m431.6943 95.667 L431.6943 105.6699 L428.4512 105.6699 L428.4512 95.667 Lf0 0 0 0 k428.4512 113.2002 m431.6943 113.2002 L431.6943 123.2061 L428.4512 123.2061 L428.4512 113.2002 Lf428.4512 130.7354 m431.6943 130.7354 L431.6943 140.7402 L428.4512 140.7402 L428.4512 130.7354 Lf0.4 0.05 0.225 0 k428.4512 148.2705 m431.6943 148.2705 L431.6943 158.2744 L428.4512 158.2744 L428.4512 148.2705 Lf0 0 0 0 k428.4512 165.8027 m431.6943 165.8027 L431.6943 175.8066 L428.4512 175.8066 L428.4512 165.8027 Lf0.4 0.05 0.225 0 k420.1006 95.667 m423.3457 95.667 L423.3457 105.6699 L420.1006 105.6699 L420.1006 95.667 Lf420.1006 113.2002 m423.3457 113.2002 L423.3457 123.2061 L420.1006 123.2061 L420.1006 113.2002 Lf0 0 0 0 k420.1006 130.7354 m423.3457 130.7354 L423.3457 140.7402 L420.1006 140.7402 L420.1006 130.7354 Lf420.1006 148.2705 m423.3457 148.2705 L423.3457 158.2744 L420.1006 158.2744 L420.1006 148.2705 Lf420.1006 165.8027 m423.3457 165.8027 L423.3457 175.8066 L420.1006 175.8066 L420.1006 165.8027 Lf411.7539 95.667 m414.998 95.667 L414.998 105.6699 L411.7539 105.6699 L411.7539 95.667 Lf411.7539 113.2002 m414.998 113.2002 L414.998 123.2061 L411.7539 123.2061 L411.7539 113.2002 Lf0.4 0.05 0.225 0 k411.7539 130.7354 m414.998 130.7354 L414.998 140.7402 L411.7539 140.7402 L411.7539 130.7354 Lf0 0 0 0 k411.7539 148.2705 m414.998 148.2705 L414.998 158.2744 L411.7539 158.2744 L411.7539 148.2705 Lf0.4 0.05 0.225 0 k411.7539 165.8027 m414.998 165.8027 L414.998 175.8066 L411.7539 175.8066 L411.7539 165.8027 Lf403.4063 95.667 m406.6494 95.667 L406.6494 105.6699 L403.4063 105.6699 L403.4063 95.667 Lf0 0 0 0 k403.4063 113.2002 m406.6494 113.2002 L406.6494 123.2061 L403.4063 123.2061 L403.4063 113.2002 Lf0.4 0.05 0.225 0 k403.4063 130.7354 m406.6494 130.7354 L406.6494 140.7402 L403.4063 140.7402 L403.4063 130.7354 Lf403.4063 148.2705 m406.6494 148.2705 L406.6494 158.2744 L403.4063 158.2744 L403.4063 148.2705 Lf0 0 0 0 k403.4063 165.8027 m406.6494 165.8027 L406.6494 175.8066 L403.4063 175.8066 L403.4063 165.8027 LfUUu1 Ap0.8 0.015686 0.31 0 k498.6582 52.0938 m457.1465 52.0938 L457.1465 184.418 L498.6582 184.418 L498.6582 52.0938 Lfu0 Ap0 0 0 0 k492.4434 176.3525 m486.0039 176.3652 L486 168.9512 L492.4355 168.9355 L492.4434 176.3525 Lf0.4 0.007843 0.155 0 k492.4336 163.8711 m485.9961 163.8906 L485.9902 156.4746 L492.4277 156.457 L492.4336 163.8711 Lf0 0 0 0 k492.4268 151.3945 m485.9863 151.4111 L485.9785 143.9971 L492.4219 143.9814 L492.4268 151.3945 Lf492.4189 138.9141 m485.9785 138.9355 L485.9746 131.5215 L492.4102 131.5049 L492.4189 138.9141 Lf492.4004 119.0264 m492.4063 126.4395 L485.9697 126.4561 L485.9619 119.0449 L492.4004 119.0264 Lf481.123 176.3789 m474.6816 176.3965 L474.6777 168.9824 L481.1152 168.9629 L481.123 176.3789 Lf0.4 0.007843 0.155 0 k481.1113 163.9004 m474.6758 163.9141 L474.6699 156.501 L481.1074 156.4873 L481.1113 163.9004 Lf0 0 0 0 k481.1016 151.4258 m474.6631 151.4375 L474.6582 144.0293 L481.0957 144.0107 L481.1016 151.4258 Lf481.0742 119.0586 m481.0859 126.4688 L474.6465 126.4883 L474.6426 119.0703 L481.0742 119.0586 Lf0.4 0.007843 0.155 0 k481.0273 131.5137 m481.0342 138.9453 L474.5762 138.9648 L474.5742 131.5313 L481.0273 131.5137 Lf469.8418 176.3789 m463.3984 176.3965 L463.3965 168.9824 L469.833 168.9629 L469.8418 176.3789 Lf0 0 0 0 k469.8281 163.9004 m463.3945 163.9141 L463.3896 156.501 L469.8262 156.4873 L469.8281 163.9004 Lf0.4 0.007843 0.155 0 k463.3809 151.4375 m463.375 144.0293 L469.8145 144.0107 L469.8203 151.4258 L463.3809 151.4375 Lf0 0 0 0 k469.8145 138.9453 m463.375 138.9609 L463.3672 131.5449 L469.8105 131.5332 L469.8145 138.9453 Lf0.4 0.007843 0.155 0 k469.793 119.0586 m469.8047 126.4688 L463.3652 126.4883 L463.3613 119.0703 L469.793 119.0586 LfUUu1 Ap0 0.73 0.996078 0 k483.3047 52.0938 m424.9971 52.0938 L424.7949 121.8662 L483.1035 122.041 L483.3047 52.0938 Lf0 Ap1 g478.7549 83.2686 m447.5254 83.1777 L447.5742 61.5186 L478.7979 61.5186 L478.7549 83.2686 Lf443.502 80.6748 m428.917 80.6748 L428.917 52.0938 L443.5684 52.0938 L443.502 80.6748 Lfu1 D0 0 0 0 k431.1758 116.7832 m431.21 104.8174 L440.8115 104.8447 L440.7754 116.8096 L431.1758 116.7832 Lf449.2344 116.835 m449.2695 104.8652 L458.8662 104.8926 L458.834 116.8584 L449.2344 116.835 Lf467.292 116.8828 m467.3242 104.917 L476.9238 104.9434 L476.8906 116.9082 L467.292 116.8828 LfU0 D0 0.83 0.996078 0.19 k481.3398 86.0957 m477.1855 99.8262 L432.6465 99.8262 L426.7588 86.0957 L426.7588 82.4463 L481.3398 82.4463 L481.3398 86.0957 Lf0 0.83 0.996078 0.1 k481.6553 142.8408 m448.0654 142.7803 L448.1689 153.1387 L440.9697 153.2041 L440.8662 142.7676 L438.4385 142.7646 L438.5137 149.8359 L431.3125 149.9043 L431.2422 142.75 L426.3711 142.7432 L423.625 121.1699 L484.4746 121.2734 L481.6553 142.8408 Lfu0 0.73 0.996078 0 k435.4395 137.3145 m432.9219 137.3213 430.8828 135.4141 430.8779 133.0732 C430.877 126.0723 L439.9795 126.0723 L439.9893 133.0664 L439.9883 135.4063 437.9482 137.3184 435.4395 137.3145 cf454.0508 137.0811 m451.5371 137.0859 449.4941 135.1787 449.4941 132.8379 C449.4893 126.0723 L458.5967 126.0723 L458.6055 132.833 L458.6045 135.1738 456.5654 137.083 454.0508 137.0811 cf472.6729 136.8477 m470.1563 136.8535 468.1152 134.9492 468.1133 132.6064 C468.1064 126.0723 L477.2139 126.0723 L477.2236 132.5996 L477.2227 134.9424 475.1807 136.8545 472.6729 136.8477 cfUU0.39 0 1 0.19 k64.7515 76.4023 m64.7515 98.0215 49.3628 119.082 Y34.2437 98.373 34.2437 76.3066 v34.2437 61.0859 39.7319 48.459 46.8628 45.8691 C46.9116 31.002 L52.3706 31.002 L52.3218 45.8809 L59.4351 48.5215 64.7515 61.1836 64.7515 76.4023 cfu0.8 0.015686 0.31 0.43 k106.105 107.5205 m103.5894 87.3174 L169.6084 87.3174 L167.6338 106.9795 L164.4878 107.0088 L164.5278 112.2021 L157.021 112.2637 L156.9824 107.0732 L106.105 107.5205 Lf0.8 0.015686 0.31 0 k106.0542 87.3174 m126.3979 103.1396 L145.7627 87.3174 L167.1436 87.3174 L167.1436 33.4199 L106.0542 33.4199 L106.0542 87.3174 Lf1 Ap161.3989 90.7852 m150.3096 90.7715 L150.293 98.8594 L155.6572 104.0537 L161.3862 98.9268 L161.3989 90.7852 Lf/BBAccumRotation (0.010188) XTu0 0 0 0 k161.8857 47.5283 m149.957 47.5283 L149.957 61.0078 L161.8857 61.0078 L161.8857 47.5283 Lf123.2427 47.5283 m111.3135 47.5283 L111.3135 61.0078 L123.2427 61.0078 L123.2427 47.5283 Lf142.5381 70.4385 m130.9526 70.4385 L130.9526 83.9199 L142.5381 83.9199 L142.5381 70.4385 Lf161.8857 70.4404 m149.957 70.4404 L149.957 83.9199 L161.8857 83.9199 L161.8857 70.4404 Lf0.32 0.006274 0.124 0 k123.2427 70.4404 m111.3135 70.4404 L111.3135 83.9199 L123.2427 83.9199 L123.2427 70.4404 LfU0.8 0.015686 0.31 0.43 k129.7549 56.8555 m143.4429 56.8555 L143.4429 33.4199 L129.7549 33.4199 L129.7549 56.8555 LfUu0 0.42 1 0 k157.2744 453.3691 m211.4146 453.3691 L211.4146 583.6094 L157.2744 583.6094 L157.2744 453.3691 Lfu0 Ap0 0 0 0 k165.3799 573.1875 m173.7778 573.2031 L173.7842 563.6211 L165.3901 563.6016 L165.3799 573.1875 Lf0 0.21 0.5 0 k165.3921 557.0566 m173.7881 557.0801 L173.7969 547.5 L165.4019 547.4785 L165.3921 557.0566 Lf0 0 0 0 k165.4019 540.9336 m173.8018 540.957 L173.811 531.375 L165.4082 531.3555 L165.4019 540.9336 Lf165.4111 524.8066 m173.811 524.834 L173.8159 515.252 L165.4258 515.2305 L165.4111 524.8066 Lf165.4341 499.1074 m165.4282 508.6855 L173.8228 508.7051 L173.832 499.1289 L165.4341 499.1074 Lf180.1455 573.2188 m188.5435 573.2441 L188.5503 563.6621 L180.1523 563.6387 L180.1455 573.2188 Lf0 0.21 0.5 0 k180.1592 557.0957 m188.5522 557.1133 L188.5601 547.5352 L180.1641 547.5176 L180.1592 557.0957 Lf0 0 0 0 k180.1714 540.9746 m188.5674 540.9902 L188.5762 531.416 L180.1802 531.3906 L180.1714 540.9746 Lf0 0.21 0.5 0 k180.208 499.1465 m180.1914 508.7227 L188.5903 508.75 L188.5952 499.1621 L180.208 499.1465 Lf180.2681 515.2402 m180.2598 524.8477 L188.6807 524.8691 L188.6841 515.2656 L180.2681 515.2402 Lf194.8579 573.2188 m203.2588 573.2441 L203.2617 563.6621 L194.8677 563.6387 L194.8579 573.2188 Lf0 0 0 0 k194.8755 557.0957 m203.2656 557.1133 L203.2725 547.5352 L194.8794 547.5176 L194.8755 557.0957 Lf0 0.21 0.5 0 k203.2837 540.9902 m203.2905 531.416 L194.8916 531.3906 L194.8857 540.9746 L203.2837 540.9902 Lf0 0 0 0 k194.8916 524.8477 m203.2905 524.8652 L203.3013 515.2813 L194.8994 515.2676 L194.8916 524.8477 Lf0 0.21 0.5 0 k194.9204 499.1465 m194.9058 508.7227 L203.3037 508.75 L203.3105 499.1621 L194.9204 499.1465 LfUU0.55 0.05 1 0.32 k168.8252 503.2539 m168.7388 518.9648 158.73 539.2969 146.5186 539.1914 c134.3125 539.0918 124.52 518.5898 124.6045 502.877 c124.6802 488.4902 133.0435 476.6777 143.8252 474.8672 C143.2012 455.1816 L150.8862 455.2344 L149.8115 474.9043 L160.6177 476.8555 168.895 488.832 168.8252 503.2539 cf0.39 0 1 0.19 k153.126 497.2305 m153.0396 511.0527 143.0313 528.9395 130.8193 528.8477 c118.6133 528.7598 108.8208 510.7246 108.9053 496.8984 c108.981 484.2559 117.3262 473.873 128.0928 472.2598 C127.5024 455.0039 L135.187 455.0527 L134.1719 472.2988 L144.9478 474.043 153.1958 484.5664 153.126 497.2305 cfu0 0.73 0.996078 0 k120.9717 496.7715 m51.1445 496.8945 L51.1885 454.5625 L121.0117 454.4375 L120.9717 496.7715 Lf0 0.83 0.996078 0.19 k65.228 517.4473 m65.3164 523.8301 L56.1807 523.9219 L56.1807 517.4648 L51.7417 517.4707 L49.1748 492.6738 L123.0615 492.6738 L120.5981 517.334 L65.228 517.4473 Lf/BBAccumRotation (0.215560) XT1 Ap0 0 0 0 k70.2622 470.8301 m57.3633 470.8633 L57.4019 486.9727 L70.3003 486.9434 L70.2622 470.8301 Lf114.77 470.7246 m101.8711 470.752 L101.9111 486.8633 L114.8159 486.832 L114.77 470.7246 Lf0 0.83 0.996078 0.19 k93.79 454.4375 m78.2632 454.4766 L78.3242 479.873 L93.8511 479.8359 L93.79 454.4375 Lf0 0.73 0.996078 0 k75.2866 497.2031 m63.2471 497.2324 L63.272 507.0859 L69.1519 513.3242 L75.3115 507.0547 L75.2866 497.2031 Lf109.0161 497.1172 m96.9766 497.1445 L97 507 L102.8779 513.2441 L109.0371 506.9727 L109.0161 497.1172 LfU0 Ap0.356863 0.12549 1 0 k64.251 225.0078 m64.251 243.7793 50.0181 262.0625 Y36.0332 244.083 36.0332 224.9238 v36.0332 211.71 41.1118 200.7451 47.707 198.4961 C47.7505 185.5879 L52.7993 185.5879 L52.7554 198.5088 L59.3359 200.7998 64.251 211.7939 64.251 225.0078 cf0.39 0 1 0.19 k47.7051 227.9951 m47.625 241.877 38.3003 259.8408 26.9233 259.748 c15.5518 259.6592 6.42871 241.5459 6.50732 227.6621 c6.57813 214.9658 14.3525 204.5381 24.3823 202.9189 C23.8325 185.5889 L30.9927 185.6387 L30.0459 202.9561 L40.0864 204.709 47.771 215.2773 47.7051 227.9951 cfu0 0.901961 0.34902 0.46 k136.7783 221.6406 m133.6421 241.7539 L68.856 241.7539 L68.856 252.9004 L60.2578 252.9141 L60.2578 241.0488 L58.1309 221.6406 L136.7783 221.6406 Lf0 0.901961 0.34902 0 k59.6377 221.6611 m83.52 236.9893 L107.9668 221.667 L134.2705 221.667 L134.2705 184.9502 L59.6377 184.6758 L59.6377 221.6611 Lf0 0.45098 0.17451 0 k113.9819 215.1318 m113.9819 197.1045 L127.335 197.1035 L127.335 215.1357 L113.9819 215.1318 Lf1 Ap0 0.901961 0.34902 0.46 k93.3066 184.7939 m108.4976 184.7939 L108.4976 213.2988 L93.3066 213.3418 L93.3066 184.7939 Lf0 0.45098 0.17451 0 k115.0552 225.416 m124.6987 225.4141 L124.6987 233.5742 L120.0059 238.7588 L115.0552 233.5762 L115.0552 225.416 Lf0 0 0 0 k87.541 199.9004 m63.8169 199.9004 L63.8169 216.2588 L87.541 216.2588 L87.541 199.9004 LfUuu0 Ap0.060785 0.052941 0.070588 0.07 k441.7715 501.5913 m441.7715 481.2383 L404.125 481.2383 L404.125 257.6104 L489.2773 257.6104 L489.2773 501.5913 L441.7715 501.5913 Lf594.2119 451.7192 m594.2119 496.2705 L548.6182 480.1118 L548.6182 451.7192 L539.9863 451.7192 L539.9863 471.6372 L534.5264 471.6372 L534.5264 485.4214 L499.8516 485.4214 L499.8516 471.6372 L494.3887 471.6372 L494.3887 257.6104 L604.4844 257.6104 L604.4844 451.7192 L594.2119 451.7192 Lf393.2148 490.7598 m393.2148 498.9814 L389.5381 498.9814 L389.5381 506.1309 L358.9883 506.1309 L358.9883 498.9814 L355.3125 498.9814 L355.3125 490.7598 L350.7871 490.7598 L350.7871 473.0967 L312.6387 473.0967 L312.6387 257.6104 L397.7402 257.6104 L397.7402 490.7598 L393.2148 490.7598 LfUu1 D0 0.42 1 0 k553.0488 463.6816 m553.0488 257.6104 L605.4824 257.6104 L605.4824 476.3086 L553.0488 463.6816 Lfu0 D0 0.21 0.5 0 k568.5195 390.6616 m561.6426 390.6616 L561.6426 412.1538 L568.5195 412.1538 L568.5195 390.6616 Lf568.5195 416.2739 m561.6426 416.2739 L561.6426 422.3486 L568.5195 422.3486 L568.5195 416.2739 Lf568.5195 425.7217 m561.6426 425.7217 L561.6426 431.7974 L568.5195 431.7974 L568.5195 425.7217 Lf568.5195 435.1719 m561.6426 435.1719 L561.6426 441.2451 L568.5195 441.2451 L568.5195 435.1719 Lf568.5195 444.6191 m561.6426 444.6191 L561.6426 450.6924 L568.5195 450.6924 L568.5195 444.6191 Lf0 0 0 0 k577.6895 390.6616 m570.8135 390.6616 L570.8135 412.1538 L577.6895 412.1538 L577.6895 390.6616 Lf0 0.21 0.5 0 k577.6895 416.2739 m570.8135 416.2739 L570.8135 422.3486 L577.6895 422.3486 L577.6895 416.2739 Lf0 0 0 0 k577.6895 425.7217 m570.8135 425.7217 L570.8135 431.7974 L577.6895 431.7974 L577.6895 425.7217 Lf0 0.21 0.5 0 k577.6895 435.1719 m570.8135 435.1719 L570.8135 441.2451 L577.6895 441.2451 L577.6895 435.1719 Lf0 0 0 0 k577.6895 444.6191 m570.8135 444.6191 L570.8135 450.6924 L577.6895 450.6924 L577.6895 444.6191 Lf577.6895 453.8389 m570.8135 453.8389 L570.8135 459.9111 L577.6895 459.9111 L577.6895 453.8389 Lf0 0.21 0.5 0 k586.8604 390.6616 m579.9844 390.6616 L579.9844 412.1538 L586.8604 412.1538 L586.8604 390.6616 Lf0 0 0 0 k586.8604 416.2739 m579.9844 416.2739 L579.9844 422.3486 L586.8604 422.3486 L586.8604 416.2739 Lf0 0.21 0.5 0 k586.8604 425.7217 m579.9844 425.7217 L579.9844 431.7974 L586.8604 431.7974 L586.8604 425.7217 Lf586.8604 435.1719 m579.9844 435.1719 L579.9844 441.2451 L586.8604 441.2451 L586.8604 435.1719 Lf0 0 0 0 k586.8604 444.6191 m579.9844 444.6191 L579.9844 450.6924 L586.8604 450.6924 L586.8604 444.6191 Lf0 0.21 0.5 0 k586.8604 453.8389 m579.9844 453.8389 L579.9844 459.9111 L586.8604 459.9111 L586.8604 453.8389 Lf0 0 0 0 k596.0313 390.6616 m589.1543 390.6616 L589.1543 412.1538 L596.0313 412.1538 L596.0313 390.6616 Lf568.5195 363.251 m561.6426 363.251 L561.6426 384.7432 L568.5195 384.7432 L568.5195 363.251 Lf577.6895 363.251 m570.8135 363.251 L570.8135 384.7432 L577.6895 384.7432 L577.6895 363.251 Lf0 0.21 0.5 0 k586.8604 363.251 m579.9844 363.251 L579.9844 384.7432 L586.8604 384.7432 L586.8604 363.251 Lf596.0313 363.251 m589.1543 363.251 L589.1543 384.7432 L596.0313 384.7432 L596.0313 363.251 Lf596.0313 416.2739 m589.1543 416.2739 L589.1543 422.3486 L596.0313 422.3486 L596.0313 416.2739 Lf0 0 0 0 k596.0313 425.7217 m589.1543 425.7217 L589.1543 431.7974 L596.0313 431.7974 L596.0313 425.7217 Lf596.0313 435.1719 m589.1543 435.1719 L589.1543 441.2451 L596.0313 441.2451 L596.0313 435.1719 Lf0 0.21 0.5 0 k596.0313 444.6191 m589.1543 444.6191 L589.1543 450.6924 L596.0313 450.6924 L596.0313 444.6191 LfUUu1 D0.8 0.015686 0.31 0 k455.2334 466.5503 m455.2334 257.6104 L500.4678 257.6104 L500.4678 466.5503 L455.2334 466.5503 Lfu0 D0.4 0.007843 0.155 0 k493.6582 306.8804 m462.0381 306.8804 L462.0381 309.8579 L493.6582 309.8579 L493.6582 306.8804 Lf493.6582 317.3252 m462.0381 317.3252 L462.0381 320.3081 L493.6582 320.3081 L493.6582 317.3252 Lf493.6582 327.771 m462.0381 327.771 L462.0381 330.7505 L493.6582 330.7505 L493.6582 327.771 Lf493.6582 338.2148 m462.0381 338.2148 L462.0381 341.1963 L493.6582 341.1963 L493.6582 338.2148 Lf493.6582 348.6626 m462.0381 348.6626 L462.0381 351.6411 L493.6582 351.6411 L493.6582 348.6626 Lf493.6582 359.1084 m462.0381 359.1084 L462.0381 362.0889 L493.6582 362.0889 L493.6582 359.1084 Lf493.6582 369.5508 m462.0381 369.5508 L462.0381 372.5332 L493.6582 372.5332 L493.6582 369.5508 Lf0 0 0 0 k493.6582 380.001 m462.0381 380.001 L462.0381 382.9775 L493.6582 382.9775 L493.6582 380.001 Lf0.4 0.007843 0.155 0 k493.6582 390.4429 m462.0381 390.4429 L462.0381 393.4253 L493.6582 393.4253 L493.6582 390.4429 Lf493.6582 400.8887 m462.0381 400.8887 L462.0381 403.8706 L493.6582 403.8706 L493.6582 400.8887 Lf0 0 0 0 k493.6582 411.335 m462.0381 411.335 L462.0381 414.3154 L493.6582 414.3154 L493.6582 411.335 Lf493.6582 421.7813 m462.0381 421.7813 L462.0381 424.7598 L493.6582 424.7598 L493.6582 421.7813 Lf0.4 0.007843 0.155 0 k493.6582 432.2246 m462.0381 432.2246 L462.0381 435.207 L493.6582 435.207 L493.6582 432.2246 Lf0 0 0 0 k493.6582 442.6743 m462.0381 442.6743 L462.0381 445.6519 L493.6582 445.6519 L493.6582 442.6743 Lf0.4 0.007843 0.155 0 k493.6582 453.1177 m462.0381 453.1177 L462.0381 456.0986 L493.6582 456.0986 L493.6582 453.1177 LfUUu0 0.73 0.996078 0 k539.0869 429.3579 m539.0869 435.9805 L535.4697 435.9805 L535.4697 441.7383 L505.4248 441.7383 L505.4248 435.9805 L501.8105 435.9805 L501.8105 429.3579 L497.3604 429.3579 L497.3604 257.6104 L543.5361 257.6104 L543.5361 429.3579 L539.0869 429.3579 Lfu0 0 0 0 k505.0225 370.0435 m500.9502 370.0435 L500.9502 383.6118 L505.0225 383.6118 L505.0225 370.0435 Lf505.0225 390.6377 m500.9502 390.6377 L500.9502 404.2065 L505.0225 404.2065 L505.0225 390.6377 Lf0 0.83 0.996078 0.1 k505.0234 412.1602 m500.9502 412.1602 L500.9502 419.1787 L505.0234 419.1787 L505.0234 412.1602 Lf511.9414 370.0435 m507.8711 370.0435 L507.8711 383.6118 L511.9414 383.6118 L511.9414 370.0435 Lf511.9414 390.6377 m507.8711 390.6377 L507.8711 404.2065 L511.9414 404.2065 L511.9414 390.6377 Lf511.9424 412.1602 m507.8711 412.1602 L507.8711 419.1787 L511.9424 419.1787 L511.9424 412.1602 Lf518.8613 370.0435 m514.792 370.0435 L514.792 383.6118 L518.8613 383.6118 L518.8613 370.0435 Lf518.8613 390.6377 m514.792 390.6377 L514.792 404.2065 L518.8613 404.2065 L518.8613 390.6377 Lf0 0 0 0 k518.8613 412.1602 m514.7881 412.1602 L514.7881 419.1787 L518.8613 419.1787 L518.8613 412.1602 Lf526.1035 370.0435 m522.0332 370.0435 L522.0332 383.6118 L526.1035 383.6118 L526.1035 370.0435 Lf526.1035 390.6377 m522.0332 390.6377 L522.0332 404.2065 L526.1035 404.2065 L526.1035 390.6377 Lf526.5381 412.1602 m522.4658 412.1602 L522.4658 419.1787 L526.5381 419.1787 L526.5381 412.1602 Lf0 0.83 0.996078 0.1 k533.0264 370.0435 m528.9541 370.0435 L528.9541 383.6118 L533.0264 383.6118 L533.0264 370.0435 Lf0 0 0 0 k533.0264 390.6377 m528.9541 390.6377 L528.9541 404.2065 L533.0264 404.2065 L533.0264 390.6377 Lf533.2285 412.1602 m529.1563 412.1602 L529.1563 419.1787 L533.2285 419.1787 L533.2285 412.1602 Lf0 0.83 0.996078 0.1 k539.9463 370.0435 m535.876 370.0435 L535.876 383.6118 L539.9463 383.6118 L539.9463 370.0435 Lf539.9463 390.6377 m535.876 390.6377 L535.876 404.2065 L539.9463 404.2065 L539.9463 390.6377 Lf0 0 0 0 k505.0225 328.7583 m500.9502 328.7583 L500.9502 342.3267 L505.0225 342.3267 L505.0225 328.7583 Lf505.0225 349.3525 m500.9502 349.3525 L500.9502 362.9204 L505.0225 362.9204 L505.0225 349.3525 Lf0 0.83 0.996078 0.1 k511.9414 328.7583 m507.8711 328.7583 L507.8711 342.3267 L511.9414 342.3267 L511.9414 328.7583 Lf0 0 0 0 k511.9414 349.3525 m507.8711 349.3525 L507.8711 362.9204 L511.9414 362.9204 L511.9414 349.3525 Lf0 0.83 0.996078 0.1 k518.8613 328.7583 m514.792 328.7583 L514.792 342.3267 L518.8613 342.3267 L518.8613 328.7583 Lf518.8613 349.3525 m514.792 349.3525 L514.792 362.9204 L518.8613 362.9204 L518.8613 349.3525 Lf0 0 0 0 k526.1035 328.7583 m522.0332 328.7583 L522.0332 342.3267 L526.1035 342.3267 L526.1035 328.7583 Lf0 0.83 0.996078 0.1 k526.1035 349.3525 m522.0332 349.3525 L522.0332 362.9204 L526.1035 362.9204 L526.1035 349.3525 Lf0 0 0 0 k533.0264 328.7583 m528.9541 328.7583 L528.9541 342.3267 L533.0264 342.3267 L533.0264 328.7583 Lf533.0264 349.3525 m528.9541 349.3525 L528.9541 362.9204 L533.0264 362.9204 L533.0264 349.3525 Lf539.9463 328.7583 m535.876 328.7583 L535.876 342.3267 L539.9463 342.3267 L539.9463 328.7583 Lf539.9463 349.3525 m535.876 349.3525 L535.876 362.9204 L539.9463 362.9204 L539.9463 349.3525 Lf505.0225 287.4746 m500.9502 287.4746 L500.9502 301.042 L505.0225 301.042 L505.0225 287.4746 Lf505.0225 308.0664 m500.9502 308.0664 L500.9502 321.6357 L505.0225 321.6357 L505.0225 308.0664 Lf511.9414 287.4746 m507.8711 287.4746 L507.8711 301.042 L511.9414 301.042 L511.9414 287.4746 Lf0 0.83 0.996078 0.1 k511.9414 308.0664 m507.8711 308.0664 L507.8711 321.6357 L511.9414 321.6357 L511.9414 308.0664 Lf0 0 0 0 k518.8613 287.4746 m514.792 287.4746 L514.792 301.042 L518.8613 301.042 L518.8613 287.4746 Lf518.8613 308.0664 m514.792 308.0664 L514.792 321.6357 L518.8613 321.6357 L518.8613 308.0664 Lf526.1035 287.4746 m522.0332 287.4746 L522.0332 301.042 L526.1035 301.042 L526.1035 287.4746 Lf0 0.83 0.996078 0.1 k526.1035 308.0664 m522.0332 308.0664 L522.0332 321.6357 L526.1035 321.6357 L526.1035 308.0664 Lf0 0 0 0 k533.0264 287.4746 m528.9541 287.4746 L528.9541 301.042 L533.0264 301.042 L533.0264 287.4746 Lf533.0264 308.0664 m528.9541 308.0664 L528.9541 321.6357 L533.0264 321.6357 L533.0264 308.0664 Lf539.9463 287.4746 m535.876 287.4746 L535.876 301.042 L539.9463 301.042 L539.9463 287.4746 Lf539.9463 308.0664 m535.876 308.0664 L535.876 321.6357 L539.9463 321.6357 L539.9463 308.0664 Lf539.9463 412.1602 m535.876 412.1602 L535.876 419.1787 L539.9463 419.1787 L539.9463 412.1602 LfUUu1 D0.8 0.1 0.45 0 k545.8643 379.1499 m520.832 356.3213 L520.832 257.6104 L571.7305 257.6104 L571.7305 356.3213 L545.8643 379.1499 Lfu0 D1 g535.8486 292.8848 m529.1738 292.8848 L529.1738 314.1611 L535.8486 314.1611 L535.8486 292.8848 Lf0.4 0.05 0.225 0 k535.8486 318.2388 m529.1738 318.2388 L529.1738 324.2539 L535.8486 324.2539 L535.8486 318.2388 Lf535.8486 327.5908 m529.1738 327.5908 L529.1738 333.6064 L535.8486 333.6064 L535.8486 327.5908 Lf1 g535.8486 336.9468 m529.1738 336.9468 L529.1738 342.959 L535.8486 342.959 L535.8486 336.9468 Lf0.4 0.05 0.225 0 k535.8486 346.2998 m529.1738 346.2998 L529.1738 352.3115 L535.8486 352.3115 L535.8486 346.2998 Lf1 g544.752 292.8848 m538.0762 292.8848 L538.0762 314.1611 L544.752 314.1611 L544.752 292.8848 Lf0.4 0.05 0.225 0 k544.752 318.2388 m538.0762 318.2388 L538.0762 324.2539 L544.752 324.2539 L544.752 318.2388 Lf1 g544.752 327.5908 m538.0762 327.5908 L538.0762 333.6064 L544.752 333.6064 L544.752 327.5908 Lf0.4 0.05 0.225 0 k544.752 336.9468 m538.0762 336.9468 L538.0762 342.959 L544.752 342.959 L544.752 336.9468 Lf544.752 346.2998 m538.0762 346.2998 L538.0762 352.3115 L544.752 352.3115 L544.752 346.2998 Lf1 g544.752 355.4263 m538.0762 355.4263 L538.0762 361.4375 L544.752 361.4375 L544.752 355.4263 Lf553.6533 292.8848 m546.9785 292.8848 L546.9785 314.1611 L553.6533 314.1611 L553.6533 292.8848 Lf553.6533 318.2388 m546.9785 318.2388 L546.9785 324.2539 L553.6533 324.2539 L553.6533 318.2388 Lf553.6533 327.5908 m546.9785 327.5908 L546.9785 333.6064 L553.6533 333.6064 L553.6533 327.5908 Lf0.4 0.05 0.225 0 k553.6533 336.9468 m546.9785 336.9468 L546.9785 342.959 L553.6533 342.959 L553.6533 336.9468 Lf1 g553.6533 346.2998 m546.9785 346.2998 L546.9785 352.3115 L553.6533 352.3115 L553.6533 346.2998 Lf553.6533 355.4263 m546.9785 355.4263 L546.9785 361.4375 L553.6533 361.4375 L553.6533 355.4263 Lf562.5547 292.8848 m555.8818 292.8848 L555.8818 314.1611 L562.5547 314.1611 L562.5547 292.8848 Lf0.4 0.05 0.225 0 k562.5547 318.2388 m555.8818 318.2388 L555.8818 324.2539 L562.5547 324.2539 L562.5547 318.2388 Lf562.5547 327.5908 m555.8818 327.5908 L555.8818 333.6064 L562.5547 333.6064 L562.5547 327.5908 Lf562.5547 336.9468 m555.8818 336.9468 L555.8818 342.959 L562.5547 342.959 L562.5547 336.9468 Lf562.5547 346.2998 m555.8818 346.2998 L555.8818 352.3115 L562.5547 352.3115 L562.5547 346.2998 LfUUu1 D0 0.73 0.996078 0 k404.6025 437.6895 m404.6025 257.6104 L444.7148 257.6104 L444.7148 450.4854 L404.6025 437.6895 Lfu0 D0 0 0 0 k417.8369 416.4111 m412.5781 416.4111 L412.5781 431.2158 L417.8369 431.2158 L417.8369 416.4111 Lf424.8555 416.4111 m419.5908 416.4111 L419.5908 431.2158 L424.8555 431.2158 L424.8555 416.4111 Lf0 0.83 0.996078 0.1 k431.8721 416.4111 m426.6094 416.4111 L426.6094 431.2158 L431.8721 431.2158 L431.8721 416.4111 Lf438.8867 416.4111 m433.626 416.4111 L433.626 431.2158 L438.8867 431.2158 L438.8867 416.4111 Lf417.8369 397.5278 m412.5781 397.5278 L412.5781 412.3335 L417.8369 412.3335 L417.8369 397.5278 Lf0 0 0 0 k424.8555 397.5278 m419.5908 397.5278 L419.5908 412.3335 L424.8555 412.3335 L424.8555 397.5278 Lf0 0.83 0.996078 0.1 k431.8721 397.5278 m426.6094 397.5278 L426.6094 412.3335 L431.8721 412.3335 L431.8721 397.5278 Lf438.8867 397.5278 m433.626 397.5278 L433.626 412.3335 L438.8867 412.3335 L438.8867 397.5278 Lf0 0 0 0 k417.8369 368.5156 m412.5781 368.5156 L412.5781 383.3208 L417.8369 383.3208 L417.8369 368.5156 Lf424.8555 368.5156 m419.5908 368.5156 L419.5908 383.3208 L424.8555 383.3208 L424.8555 368.5156 Lf0 0.83 0.996078 0.1 k431.8721 368.5156 m426.6094 368.5156 L426.6094 383.3208 L431.8721 383.3208 L431.8721 368.5156 Lf0 0 0 0 k438.8867 368.5156 m433.626 368.5156 L433.626 383.3208 L438.8867 383.3208 L438.8867 368.5156 Lf0 0.83 0.996078 0.1 k417.8369 349.6328 m412.5781 349.6328 L412.5781 364.438 L417.8369 364.438 L417.8369 349.6328 Lf0 0 0 0 k424.8555 349.6328 m419.5908 349.6328 L419.5908 364.438 L424.8555 364.438 L424.8555 349.6328 Lf0 0.83 0.996078 0.1 k431.8721 349.6328 m426.6094 349.6328 L426.6094 364.438 L431.8721 364.438 L431.8721 349.6328 Lf438.8867 349.6328 m433.626 349.6328 L433.626 364.438 L438.8867 364.438 L438.8867 349.6328 LfUUu1 D0 0.901961 0.34902 0 k366.7881 436.6143 m366.7881 259.292 L406.9043 259.292 L406.9043 449.4106 L366.7881 436.6143 Lfu0 D0 0 0 0 k378.626 416.4111 m373.3643 416.4111 L373.3643 431.2158 L378.626 431.2158 L378.626 416.4111 Lf385.6416 416.4111 m380.3789 416.4111 L380.3789 431.2158 L385.6416 431.2158 L385.6416 416.4111 Lf0 0.45098 0.17451 0 k392.6572 416.4111 m387.3965 416.4111 L387.3965 431.2158 L392.6572 431.2158 L392.6572 416.4111 Lf399.6729 416.4111 m394.4102 416.4111 L394.4102 431.2158 L399.6729 431.2158 L399.6729 416.4111 Lf378.626 397.5278 m373.3643 397.5278 L373.3643 412.3335 L378.626 412.3335 L378.626 397.5278 Lf0 0 0 0 k385.6416 397.5278 m380.3789 397.5278 L380.3789 412.3335 L385.6416 412.3335 L385.6416 397.5278 Lf0 0.45098 0.17451 0 k392.6572 397.5278 m387.3965 397.5278 L387.3965 412.3335 L392.6572 412.3335 L392.6572 397.5278 Lf0 0 0 0 k399.6729 397.5278 m394.4102 397.5278 L394.4102 412.3335 L399.6729 412.3335 L399.6729 397.5278 Lf0 0.45098 0.17451 0 k378.626 368.5156 m373.3643 368.5156 L373.3643 383.3208 L378.626 383.3208 L378.626 368.5156 Lf0 0 0 0 k385.6416 368.5156 m380.3789 368.5156 L380.3789 383.3208 L385.6416 383.3208 L385.6416 368.5156 Lf0 0.45098 0.17451 0 k392.6572 368.5156 m387.3965 368.5156 L387.3965 383.3208 L392.6572 383.3208 L392.6572 368.5156 Lf399.6729 368.5156 m394.4102 368.5156 L394.4102 383.3208 L399.6729 383.3208 L399.6729 368.5156 Lf378.626 349.6328 m373.3643 349.6328 L373.3643 364.438 L378.626 364.438 L378.626 349.6328 Lf385.6416 349.6328 m380.3789 349.6328 L380.3789 364.438 L385.6416 364.438 L385.6416 349.6328 Lf392.6572 349.6328 m387.3965 349.6328 L387.3965 364.438 L392.6572 364.438 L392.6572 349.6328 Lf399.6729 349.6328 m394.4102 349.6328 L394.4102 364.438 L399.6729 364.438 L399.6729 349.6328 LfUUu1 Ap0.8 0.015686 0.31 0 k415.7793 344.9253 m388.1563 369.2153 L362.5332 344.9253 L362.5332 257.6104 L415.7793 257.6104 L415.7793 344.9253 Lfu0.32 0.006274 0.124 0 k392.6445 349.3398 m384.2627 349.3398 L384.2627 360.8335 L392.6445 360.8335 L392.6445 349.3398 Lf0 Ap394.041 334.3232 m394.041 343.4536 L384.2656 343.4536 L384.2656 334.3232 L394.041 334.3232 Lf380.418 334.3232 m380.418 343.4536 L370.6396 343.4536 L370.6396 334.3232 L380.418 334.3232 Lf0 0 0 0 k407.6709 334.3232 m407.6709 343.4536 L397.8916 343.4536 L397.8916 334.3232 L407.6709 334.3232 Lf0.32 0.006274 0.124 0 k384.2656 332.5054 m384.2656 321.6548 L394.041 321.6548 L394.041 332.5054 L384.2656 332.5054 Lf370.6396 332.5054 m370.6396 321.6548 L380.418 321.6548 L380.418 332.5054 L370.6396 332.5054 Lf0 0 0 0 k397.8916 332.5054 m397.8916 321.6548 L407.6709 321.6548 L407.6709 332.5054 L397.8916 332.5054 LfUu1 Ap410.9482 273.8584 m367.3633 273.8584 L367.3633 304.502 L410.9482 304.502 L410.9482 273.8584 Lf0 Ap0.8 0.015686 0.31 0.43 k413.8477 306.7212 m409.6104 316.1865 409.6104 316.187 V369.623 316.187 L364.4639 306.7212 L364.4639 302.1201 L364.5127 300.2119 366.0664 298.6777 367.9844 298.6777 c369.9063 298.6777 371.459 300.2119 371.5088 302.1201 C371.5205 302.1201 L371.5674 300.2119 373.1211 298.6777 375.043 298.6777 c376.9609 298.6777 378.5156 300.2119 378.5664 302.1201 C378.5762 302.1201 L378.626 300.2119 380.1787 298.6777 382.0977 298.6777 c384.0205 298.6777 385.5723 300.2119 385.6211 302.1201 C385.6338 302.1201 L385.6826 300.2119 387.2344 298.6777 389.1572 298.6777 c391.0752 298.6777 392.6279 300.2119 392.6797 302.1201 C392.6875 302.1201 L392.7363 300.2119 394.29 298.6777 396.2109 298.6777 c398.1328 298.6777 399.6855 300.2119 399.7344 302.1201 C399.7451 302.1201 L399.7949 300.2119 401.3486 298.6777 403.2666 298.6777 c405.1875 298.6777 406.7422 300.2119 406.7891 302.1201 C406.8008 302.1201 L406.8506 300.2119 408.4033 298.6777 410.3252 298.6777 c412.2441 298.6777 413.7988 300.2119 413.8477 302.1201 C413.8477 306.7212 LfU387.9053 375.0801 m358.291 347.4307 L361.5781 343.9106 L388.0176 368.5938 L416.376 343.856 L419.542 347.4854 L387.9053 375.0801 LfUu1 Ap0 0.901961 0.34902 0 k480.1494 344.9253 m452.5264 369.2153 L426.9023 344.9253 L426.9023 257.6104 L480.1494 257.6104 L480.1494 344.9253 Lfu0 0.45098 0.17451 0 k457.0146 349.3398 m448.6338 349.3398 L448.6338 360.8335 L457.0146 360.8335 L457.0146 349.3398 Lf0 Ap458.4121 334.3232 m458.4121 343.4536 L448.6357 343.4536 L448.6357 334.3232 L458.4121 334.3232 Lf0 0 0 0 k444.7871 334.3232 m444.7871 343.4536 L435.0107 343.4536 L435.0107 334.3232 L444.7871 334.3232 Lf472.04 334.3232 m472.04 343.4536 L462.2617 343.4536 L462.2617 334.3232 L472.04 334.3232 Lf0 0.45098 0.17451 0 k448.6357 332.5054 m448.6357 321.6548 L458.4121 321.6548 L458.4121 332.5054 L448.6357 332.5054 Lf435.0107 332.5054 m435.0107 321.6548 L444.7871 321.6548 L444.7871 332.5054 L435.0107 332.5054 Lf0 0 0 0 k462.2617 332.5054 m462.2617 321.6548 L472.04 321.6548 L472.04 332.5054 L462.2617 332.5054 LfUu1 Ap475.3193 273.8584 m431.7324 273.8584 L431.7324 304.502 L475.3193 304.502 L475.3193 273.8584 Lf0 Ap0 0.586275 0.226863 0 k478.2168 306.7212 m473.9805 316.1865 473.9805 316.187 V433.9932 316.187 L428.8359 306.7212 L428.8359 302.1201 L428.8828 300.2119 430.4375 298.6777 432.3555 298.6777 c434.2764 298.6777 435.8291 300.2119 435.8779 302.1201 C435.8896 302.1201 L435.9375 300.2119 437.4922 298.6777 439.4121 298.6777 c441.3301 298.6777 442.8857 300.2119 442.9355 302.1201 C442.9453 302.1201 L442.9961 300.2119 444.5479 298.6777 446.4678 298.6777 c448.3887 298.6777 449.9434 300.2119 449.9912 302.1201 C450.0029 302.1201 L450.0518 300.2119 451.6035 298.6777 453.5254 298.6777 c455.4463 298.6777 456.998 300.2119 457.0488 302.1201 C457.0586 302.1201 L457.1064 300.2119 458.6602 298.6777 460.582 298.6777 c462.5029 298.6777 464.0537 300.2119 464.1045 302.1201 C464.1152 302.1201 L464.165 300.2119 465.7197 298.6777 467.6377 298.6777 c469.5576 298.6777 471.1113 300.2119 471.1602 302.1201 C471.1719 302.1201 L471.2207 300.2119 472.7734 298.6777 474.6943 298.6777 c476.6143 298.6777 478.1689 300.2119 478.2168 302.1201 C478.2168 306.7212 LfU0 0.901961 0.34902 0.46 k452.4697 375.0801 m422.8564 347.4307 L426.1416 343.9106 L452.582 368.5938 L480.9414 343.856 L484.1055 347.4854 L452.4697 375.0801 LfUu0.8 0.1 0.45 0.21 k355.7549 436.3071 m349.7842 436.2925 L349.7607 446.3286 L344.1475 446.3159 L344.1377 450.1416 L310.6621 450.063 L310.6689 446.2363 L305.042 446.2231 L305.0635 436.1865 L298.7354 436.1709 L299.0947 257.6104 L356.124 257.6104 L355.7549 436.3071 Lfu1 Ap0 0 0 0 k326.4766 321.145 m316.7471 321.1235 L316.7129 335.7354 L326.4443 335.7544 L326.4766 321.145 Lf/BBAccumRotation (0.002290) XT0.4 0.05 0.225 0 k338.9209 321.166 m329.1914 321.1445 L329.1572 335.7588 L338.8887 335.7817 L338.9209 321.166 Lf/BBAccumRotation (0.002290) XT351.3662 321.1563 m341.6357 321.1377 L341.6025 335.7471 L351.3359 335.7686 L351.3662 321.1563 Lf/BBAccumRotation (0.002290) XT0 0 0 0 k326.4619 344.1187 m316.7305 344.0957 L316.6963 358.7051 L326.4287 358.7266 L326.4619 344.1187 Lf/BBAccumRotation (0.002290) XT0.4 0.05 0.225 0 k338.9082 344.1377 m329.1758 344.1172 L329.1406 358.7275 L338.873 358.752 L338.9082 344.1377 Lf/BBAccumRotation (0.002290) XT0 0 0 0 k351.3525 344.1299 m341.6182 344.1074 L341.5859 358.7173 L351.3193 358.7417 L351.3525 344.1299 Lf/BBAccumRotation (0.002290) XT326.4463 367.0889 m316.7148 367.064 L316.6826 381.6763 L326.4131 381.6968 L326.4463 367.0889 Lf/BBAccumRotation (0.002290) XT338.8926 367.1079 m329.1592 367.0889 L329.1279 381.6968 L338.8594 381.7227 L338.8926 367.1079 Lf/BBAccumRotation (0.002290) XT0.4 0.05 0.225 0 k351.3359 367.0977 m341.6035 367.0776 L341.5713 381.689 L351.3018 381.7124 L351.3359 367.0977 Lf/BBAccumRotation (0.002290) XT0 0 0 0 k326.4307 390.0566 m316.7002 390.0356 L316.666 404.6494 L326.3965 404.6675 L326.4307 390.0566 Lf/BBAccumRotation (0.002290) XT0.4 0.05 0.225 0 k338.875 390.0796 m329.1436 390.0576 L329.1113 404.6694 L338.8428 404.6943 L338.875 390.0796 Lf/BBAccumRotation (0.002290) XT351.3193 390.0708 m341.5869 390.0493 L341.5557 404.6606 L351.2881 404.6846 L351.3193 390.0708 Lf/BBAccumRotation (0.002290) XT326.416 413.0039 m316.6846 412.9824 L316.6523 427.5938 L326.3818 427.6167 L326.416 413.0039 Lf/BBAccumRotation (0.002290) XT0 0 0 0 k313.3223 321.1504 m303.5903 321.1279 L303.5552 335.7407 L313.2891 335.7598 L313.3223 321.1504 Lf/BBAccumRotation (0.002290) XT0.4 0.05 0.225 0 k313.3057 344.1235 m303.5742 344.1011 L303.5405 358.7109 L313.2725 358.7324 L313.3057 344.1235 Lf/BBAccumRotation (0.002290) XT313.2891 367.0942 m303.5591 367.0693 L303.5254 381.6812 L313.2549 381.7021 L313.2891 367.0942 Lf/BBAccumRotation (0.002290) XT313.2744 390.0625 m303.5444 390.041 L303.5103 404.6533 L313.2393 404.6729 L313.2744 390.0625 Lf/BBAccumRotation (0.002290) XT338.8594 413.0503 m329.1279 413.0288 L329.0957 427.6411 L338.8281 427.6631 L338.8594 413.0503 Lf/BBAccumRotation (0.002290) XT351.3057 413.041 m341.5742 413.0205 L341.54 427.6309 L351.2725 427.6533 L351.3057 413.041 Lf/BBAccumRotation (0.002290) XT0 0 0 0 k313.2266 412.9824 m303.4458 412.9824 L303.4458 427.646 L313.2266 427.646 L313.2266 412.9824 LfUu326.4004 436.2227 m319.1768 436.208 L319.1641 441.0459 L326.3887 441.0615 L326.4004 436.2227 Lf/BBAccumRotation (0.002290) XT335.6396 436.2432 m328.416 436.2246 L328.4033 441.0654 L335.6279 441.0811 L335.6396 436.2432 Lf/BBAccumRotation (0.002290) XT0.4 0.05 0.225 0 k317.1934 436.2246 m309.9688 436.2104 L309.957 441.0488 L317.1836 441.064 L317.1934 436.2246 Lf/BBAccumRotation (0.002290) XT0 0 0 0 k344.876 436.251 m337.6543 436.2344 L337.6445 441.0742 L344.8672 441.0898 L344.876 436.251 Lf/BBAccumRotation (0.002290) XTU349.5088 262.875 m305.3945 262.875 L305.3945 303.2275 L349.5088 303.2275 L349.5088 262.875 Lfuu0.200012 g322.3896 278.7764 m322.3896 279.4023 320.2451 279.9102 317.6045 279.9102 c314.959 279.9102 312.8164 279.4023 312.8164 278.7764 c312.8164 278.1523 314.959 277.6396 317.6045 277.6396 c320.2451 277.6396 322.3896 278.1523 322.3896 278.7764 cf0 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk323.457 282.6162 m323.126 283.4736 322.5537 284.9033 322.208 285.8154 c321.376 288.0117 320.9844 288.4375 319.2852 288.4375 c319.0664 288.4375 316.1104 288.4307 315.9189 288.4307 c314.2217 288.4307 313.8271 288.0117 312.999 285.8154 c312.6514 284.9033 312.0771 283.4736 311.749 282.6162 c311.3008 281.46 311.5166 280.3721 312.667 280.002 c313.1182 279.8555 322.0859 279.8555 322.541 280.002 c323.6875 280.3721 323.9053 281.46 323.457 282.6162 cf0.5 g321.8389 280.8369 m321.7217 280.9424 321.4482 281.2012 Y321.2256 285.1494 321.1494 286.4688 v321.1455 286.5313 321.0889 286.583 321.0225 286.583 c318.9668 286.5898 314.8564 286.583 312.7988 286.583 c312.7344 286.583 312.6826 286.543 312.6885 286.4756 c312.7656 285.0781 312.9258 282.2695 313.0088 280.8643 c313.0107 280.7979 313.0684 280.7393 313.1357 280.7393 c315.3066 280.7393 319.8799 280.7393 321.8281 280.7393 c321.8916 280.7393 321.8955 280.7832 321.8389 280.8369 cf0.3 0.3 0.3 1 (Black) 0 0 Xk316.7627 278.8701 m316.6699 279.6563 315.9248 280.2168 315.0996 280.1201 c314.2725 280.0195 313.6768 279.3027 313.7705 278.5146 C315.1289 266.9922 l315.2246 266.2031 315.9688 265.6426 316.793 265.7422 c317.6211 265.8389 318.2168 266.5596 318.1221 267.3496 C316.7627 278.8701 lf318.4414 278.8701 m318.5322 279.6563 319.2803 280.2168 320.1045 280.1201 c320.9326 280.0195 321.5283 279.3027 321.4326 278.5146 C320.0752 266.9922 l319.9834 266.2031 319.2363 265.6426 318.4111 265.7422 c317.585 265.8389 316.9883 266.5596 317.083 267.3496 C318.4414 278.8701 lf1 Ap320.1182 291.1689 m320.1182 292.5576 318.9922 293.6826 317.6045 293.6826 c316.2119 293.6826 315.0869 292.5576 315.0869 291.167 c315.0869 289.7773 316.2119 288.6523 317.6045 288.6523 c318.9922 288.6523 320.1182 289.7773 320.1182 291.1689 cfUu0 Ap340.7227 282.4219 m340.3877 283.3076 339.8057 284.9004 339.4551 285.748 c338.5918 287.8379 338.4961 288.252 337.165 288.252 c336.998 288.252 334.6807 288.251 334.5322 288.251 c333.2021 288.251 332.8955 287.8447 332.2451 285.748 c331.9717 284.8711 331.5391 283.499 331.2656 282.6797 c330.834 281.3994 331.085 280.5342 331.9844 280.1836 c332.3389 280.042 339.3613 280.042 339.7148 280.1836 c340.6133 280.5342 341.1318 281.3389 340.7227 282.4219 cf1 Ap0.5 g337.7783 282.5752 m337.8057 282.4443 337.7236 282.3389 337.5938 282.3389 c333.9277 282.3389 l333.7969 282.3389 333.667 282.4443 333.6377 282.5752 c332.5498 287.4297 l332.5244 287.5625 332.6045 287.665 332.7344 287.665 c336.4023 287.665 l336.5313 287.665 336.6611 287.5625 336.6904 287.4297 c337.7783 282.5752 lf/BBAccumShear (12.619323 179.999985) XT0 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk337.8555 284.5449 m337.4902 284.8496 336.9482 284.9541 336.4414 284.4111 c335.9932 283.9287 336.1748 283.2822 336.5391 282.9658 c336.6426 282.873 339.1152 280.7949 339.2197 280.707 c339.5977 280.4063 340.2168 280.4668 340.5527 280.9258 c340.9404 281.4492 340.9141 281.9697 340.5488 282.2725 c340.3154 282.4727 338.0918 284.3438 337.8555 284.5449 cf/BBAccumRotation (0.871569) XT331.2773 282.001 m330.9668 281.6387 331.0234 281.124 331.4883 280.6689 c331.8945 280.2686 332.5176 280.3066 332.8398 280.6689 c332.9316 280.7695 334.8398 282.9756 334.9287 283.083 c335.2383 283.457 335.2764 284.1738 334.8115 284.5449 c334.2969 284.9443 333.6875 284.79 333.3789 284.4316 c333.1787 284.1953 331.4756 282.2344 331.2773 282.001 cf/BBAccumRotation (2.430812) XT1 Ap0.200012 g341.3799 278.7764 m341.3799 279.4023 339.2363 279.9102 336.5928 279.9102 c333.9482 279.9102 331.8057 279.4023 331.8057 278.7764 c331.8057 278.1523 333.9482 277.6396 336.5928 277.6396 c339.2363 277.6396 341.3799 278.1523 341.3799 278.7764 cf0.3 0.3 0.3 1 (Black) 0 0 Xk340.1211 275.9365 m337.8906 276.541 335.249 276.4932 333.0176 275.8877 C332.6865 279.3857 333.835 281.4053 334.3975 281.5752 c335.209 281.8105 335.8701 281.5566 336.3643 281.5605 c336.8877 281.5615 337.6387 281.834 338.4512 281.5752 c339.1025 281.3633 340.2236 279.4238 340.1211 275.9365 Cf0 Ap333.3564 277.0313 m333.2441 277.7217 333.7041 278.3516 334.3809 278.4365 c335.0615 278.5205 335.7041 278.0322 335.8154 277.3447 C336.8271 269.8311 337.2197 267.2832 v337.3496 266.4404 337.0498 265.9277 336.5 265.873 c335.9551 265.8193 335.5088 266.1162 335.3096 267.1074 c334.8047 269.6475 333.3564 277.0313 yf337.332 277.4873 m337.4531 278.1768 338.0967 278.6162 338.7627 278.4736 c339.4336 278.334 339.8779 277.6563 339.7549 276.9717 C338.2236 269.5459 337.752 267.0117 v337.5977 266.1699 337.1455 265.7852 336.6074 265.9189 c336.0742 266.0469 335.751 266.4756 335.8916 267.4775 c336.2539 270.042 337.332 277.4873 yf340.7656 291.1387 m340.7539 290.5264 340.0566 290.292 v339.2695 290.0254 338.9004 290.6777 338.1973 292.0205 c337.752 292.8662 336.9561 293.5234 335.9336 293.5508 c334.5273 293.5928 333.3506 292.4854 333.3105 291.0771 c333.2686 289.667 334.375 288.4941 335.7842 288.4512 c336.1123 288.4404 336.4238 288.4961 336.7119 288.5977 C337.8105 288.8555 338.2715 288.6504 339.1094 287.918 c339.8232 287.291 340.7881 287.333 341.4297 287.9814 c342.6865 289.25 340.7656 291.1387 YfU0.200012 g348.6016 279.4063 m348.6016 280.7637 L306.6123 280.7637 L306.6123 279.4063 L317.2559 279.4063 L317.2559 265.9053 L315.3984 265.9053 L315.3984 265.3379 L317.2559 265.3379 L317.2559 262.876 L317.9492 262.876 L317.9492 265.3379 L319.8066 265.3379 L319.8066 265.9053 L317.9492 265.9053 L317.9492 279.4063 L336.2461 279.4063 L336.2461 265.9053 L334.3877 265.9053 L334.3877 265.3379 L336.2461 265.3379 L336.2461 262.876 L336.9385 262.876 L336.9385 265.3379 L338.7969 265.3379 L338.7969 265.9053 L336.9385 265.9053 L336.9385 279.4063 L348.6016 279.4063 Lf*u1 D0.3 0.3 0.3 1 (Black) 0 0 Xk344.5732 282.8428 m344.5527 282.8467 344.5273 282.8486 344.5117 282.8486 C344.4707 282.8467 344.4355 282.8398 344.4004 282.833 C344.4033 282.9199 344.4043 283.0088 344.4043 283.1006 C342.0557 283.1006 L342.0557 282.1611 342.1797 281.3311 342.6748 280.9951 C342.0029 280.9951 L341.9609 280.9951 341.9521 280.9678 341.9785 280.9375 C342.1045 280.7979 L342.1328 280.7705 342.1875 280.7441 342.2275 280.7441 C344.2549 280.7441 L344.2969 280.7441 344.3525 280.7705 344.3779 280.7979 C344.5078 280.9375 L344.5322 280.9678 344.5225 280.9951 344.4824 280.9951 C343.7969 280.9951 L344.0234 281.1396 344.1748 281.3721 344.2656 281.6836 C344.3027 281.6699 344.3389 281.6533 344.3828 281.6445 C344.4033 281.6426 344.4219 281.6406 344.4424 281.6406 c344.71 281.6484 344.9072 281.8848 344.9531 282.1689 c344.9609 282.21 344.9639 282.251 344.9639 282.291 c344.9639 282.5508 344.8252 282.7979 344.5732 282.8428 cf0 D344.71 282.2061 m344.6797 282.0039 344.5361 281.8848 344.4424 281.8867 C344.4355 281.8867 344.4268 281.8867 344.4199 281.8896 C344.3877 281.8906 344.3555 281.917 344.3262 281.9453 C344.3574 282.1318 344.3779 282.335 344.3906 282.5508 C344.4287 282.5811 344.4678 282.6035 344.5039 282.6035 c344.5078 282.6035 344.5078 282.6035 344.5117 282.6035 c344.5186 282.6035 344.5244 282.6016 344.5283 282.6016 C344.6201 282.5938 344.7158 282.4727 344.7158 282.291 c344.7158 282.2656 344.7129 282.2393 344.71 282.2061 C344.71 282.2061 Lf*UU0.8 0.1 0.45 0.68 k352.7197 301.5488 m348.1855 315.9204 L308.6094 315.9204 L302.1826 301.5488 L302.1826 297.7275 L352.7197 297.7275 L352.7197 301.5488 Lfu*u1 D0 0 0 0 k330.5439 308.0801 m330.4502 308.0776 330.3613 308.0757 330.2744 308.0518 C330.2822 308.1382 330.2822 308.2212 330.2852 308.3013 C330.2852 308.3203 330.2822 308.3359 330.2822 308.3501 C322.3838 308.3237 L322.3857 308.312 322.3838 308.292 322.3857 308.2764 C322.3936 306.187 323.292 304.3975 324.5859 303.5254 C322.3369 303.5166 L322.2266 303.5205 322.1924 303.4463 322.2607 303.3467 c322.376 303.1807 322.4395 303.1064 322.5361 302.9756 c322.6426 302.8369 322.7549 302.8037 322.8691 302.8037 C329.8398 302.8271 L329.9551 302.8291 330.0674 302.8643 330.1729 303.001 c330.2695 303.1338 330.3311 303.21 330.4482 303.3779 c330.5137 303.4756 330.4775 303.5518 330.3662 303.5479 C328.1113 303.5391 L328.8164 304.0195 329.4023 304.7598 329.7861 305.686 C330.0029 305.5269 330.2656 305.437 330.5518 305.439 c331.2832 305.4409 331.873 306.0347 331.8672 306.7622 c331.8672 307.4951 331.2715 308.0845 330.5439 308.0801 cf0 D330.5479 306.0425 m330.3271 306.0425 330.1348 306.144 329.999 306.2964 C330.1064 306.647 330.1826 307.0171 330.2275 307.4019 C330.3242 307.4487 330.4297 307.4785 330.5439 307.4785 c330.9424 307.4805 331.2637 307.1587 331.2637 306.7603 c331.2676 306.3647 330.9473 306.0464 330.5479 306.0425 cf*Uu324.7832 309.3345 m325.1104 309.0083 L325.4609 309.2832 325.8955 309.4585 326.377 309.4619 c326.8271 309.4619 327.2363 309.3149 327.5781 309.0723 C327.9014 309.4048 L327.4785 309.7319 326.9512 309.9292 326.376 309.9248 c325.7686 309.9248 325.2178 309.6987 324.7832 309.3345 Cf/BBAccumRotation (0.003573) XT324.1348 309.98 m324.4619 309.6484 L324.9795 310.0908 325.6475 310.3599 326.373 310.3613 c327.0723 310.3647 327.707 310.1226 328.2178 309.7217 C328.5479 310.0576 L327.957 310.5381 327.1992 310.8311 326.373 310.8286 c325.5137 310.8232 324.7334 310.5044 324.1348 309.98 Cf/BBAccumRotation (0.003573) XT326.3711 311.6631 m325.2832 311.6582 324.291 311.2397 323.541 310.5688 C323.8701 310.2383 L324.5371 310.8311 325.4092 311.1914 326.3711 311.1973 c327.2988 311.2017 328.1475 310.8667 328.8076 310.3203 C329.1357 310.6504 L328.3896 311.2842 327.4258 311.667 326.3711 311.6631 cf/BBAccumRotation (0.003573) XTUUU0.356863 0.12549 1 0 k508.6855 293.8418 m508.6855 311.7217 495.127 329.1382 Y481.8066 312.0107 481.8066 293.7607 v481.8066 281.1748 486.6445 270.7295 492.9248 268.5869 C492.9678 257.6104 L497.7773 257.6104 L497.7354 268.5996 L504.0029 270.7822 508.6855 281.2539 508.6855 293.8418 cfU0.06 0.06 0.06 0.179999 k266.2383 56.9238 m264.3447 56.9238 262.6553 57.6826 261.3701 58.9561 c260.0957 60.2412 259.3398 61.9316 259.3374 63.8223 C260.1001 585.5391 L245.1011 585.5605 L244.3364 63.8359 L244.3667 51.7285 254.1416 41.9512 266.2383 41.9229 C612 41.9229 L612 56.9219 L266.2383 56.9238 Lf0.55 g240.9941 257.9131 m239.1025 257.915 237.4111 258.6729 236.1274 259.9463 c234.8521 261.2305 234.0962 262.9219 234.0942 264.8135 C234.0942 434.0034 L234.064 446.0986 224.29 455.875 212.1948 455.9028 C38.0537 455.9028 L38.0537 440.9033 L212.1948 440.9033 L214.0859 440.9014 215.7759 440.1436 217.0596 438.8701 c218.3345 437.5845 219.0923 435.895 219.0923 434.0034 C219.0923 264.8135 L219.1226 252.7178 228.8989 242.9414 240.9941 242.9111 C612 242.9111 L612 257.9131 L240.9941 257.9131 Lf0.225 0.225 0.225 0.674996 k271.4941 612 m271.4917 612 L271.4917 611.9409 271.4917 247.2637 271.4917 156.251 c271.4941 152.4141 270.1318 148.7041 267.6909 146.1309 c265.2124 143.5908 261.6973 141.5752 254.9995 141.5 c217.1191 141.502 122.7104 141.502 99.3198 141.502 C99.3198 161.0723 L60.6938 131.7715 L99.3198 102.4707 L99.3198 120.501 L122.7104 120.502 217.1191 120.502 254.9995 120.5 c255.0957 120.5 255.1919 120.499 255.2876 120.499 c266.7173 120.499 276.5864 124.8428 282.9888 131.7451 c289.4829 138.6738 292.4912 147.5879 292.4932 156.251 c292.4932 216.9258 292.4932 336.6128 292.4932 441.1318 c292.4932 493.3916 292.4932 611.9409 292.4932 612 C271.4941 612 Lf0.12 0.12 0.12 0.359998 k146.646 389.0342 m126.0249 368.3662 L139.667 368.3662 L139.665 192.8584 L139.665 190.9678 138.9063 189.2773 137.6318 187.9922 c136.3486 186.7168 134.6582 185.959 132.7676 185.959 C0 185.959 L0 170.958 L132.7676 170.958 L144.8618 170.9873 154.6367 180.7637 154.666 192.8584 C154.666 368.3662 L167.2671 368.3662 L146.646 389.0342 Lf0.15 0.15 0.15 0.449997 k258 27.8457 m225.168 48.4668 L225.168 35.8643 L33.4004 35.8662 L21.3066 35.8379 11.5288 26.0625 11.4985 13.9668 C11.4985 0 L26.4995 0 L26.4995 13.9668 L26.5015 15.8584 27.2593 17.5479 28.5327 18.832 c29.8169 20.1074 31.5083 20.8652 33.4004 20.8652 C225.168 20.8672 L225.168 7.22461 L258 27.8457 Lf0.06 0.06 0.06 0.179999 k253.2305 602.8394 m232.6094 582.1714 L273.8516 582.1714 L253.2305 602.8394 Lf0.3 g601.0488 228.21 m598.8457 232.4189 595.6914 236.0293 591.9922 238.8701 C541.0537 278.0654 L533.1748 284.1279 521.8711 282.6563 515.8105 274.7773 c509.748 266.8984 511.2207 255.5967 519.0996 249.5342 C541.3496 232.4141 L207.6953 232.417 L207.6953 398.0054 L207.6274 415.9463 193.2358 430.3354 175.2949 430.4058 C0 430.4058 L0 394.4053 L171.6948 394.4053 L171.6948 228.8145 L171.7646 210.876 186.1543 196.4844 204.0952 196.4141 C541.333 196.4141 L519.0996 179.3066 L511.2207 173.2441 509.748 161.9424 515.8105 154.0635 c519.3564 149.4561 524.6934 147.04 530.0898 147.04 c533.9209 147.04 537.7822 148.2578 541.0537 150.7754 C591.9951 189.9727 L595.6934 192.8154 598.8457 196.4287 601.0508 200.6348 c603.2598 204.8301 604.4834 209.6143 604.4746 214.4219 c604.4834 219.2305 603.2598 224.0146 601.0488 228.21 cf0.55 g44.1689 424.4702 m5.54297 446.771 L44.1689 469.0718 L44.1689 424.4702 Lfu0 0 0 0 k492.7227 94.2422 m603.4678 94.2422 l604.4023 70.2363 l531.918 70.2363 l531.7637 54.085 l513.0996 54.085 l513.0996 70.0898 l490.3906 70.0898 l492.7227 94.2422 lfu0.3 0.3 0.3 1 (Black) 0 0 Xk505.2393 80.0186 m501.9951 79.9727 L501.252 79.9619 500.6592 79.5908 500.1885 79.1025 c498.8271 77.6846 496.6426 75.3262 Y493.8994 75.2803 L493.248 75.2754 492.7402 74.7402 492.7441 74.0918 c492.749 73.4404 493.2813 72.9238 493.9395 72.9336 C496.5098 72.9961 497.2646 73.0068 v497.8447 73.0156 498.1182 73.2031 498.3633 73.4473 C500.3926 76.21 L500.374 72.2891 L507.6309 72.2891 L507.6143 77.7168 L507.5801 79.0088 506.5273 80.04 505.2393 80.0186 Cf1 Ap500.6865 83.2891 m500.7744 81.584 502.2422 80.2744 503.9395 80.3711 c505.6533 80.4648 506.96 81.9219 506.8604 83.6279 c506.7773 85.3359 505.3105 86.6445 503.6035 86.5449 c501.8906 86.4551 500.5918 84.9922 500.6865 83.2891 cfUu0 Ap538.6973 79.0039 m535.5283 79.0088 L534.2588 79.0039 533.2451 78.7119 533.2422 77.4531 C533.2344 64.8516 L540.9746 64.8467 L540.9717 77.4482 L540.9766 78.7119 539.9473 79.0039 538.6973 79.0039 Cf1 Ap540.3281 82.543 m540.3389 80.8164 538.9365 79.4258 537.2217 79.4209 c535.499 79.4258 534.1055 80.8232 534.1055 82.542 c534.1035 84.2617 535.5049 85.6553 537.2197 85.6553 c538.9385 85.6553 540.3281 84.2588 540.3281 82.543 cfUu0 Ap558.5244 79.0039 m555.3564 79.0088 L554.085 79.0039 553.0674 78.7119 553.0674 77.4531 C553.0625 64.8516 L560.7998 64.8467 L560.7969 77.4482 L560.8037 78.7119 559.7734 79.0039 558.5244 79.0039 Cf1 Ap560.1553 82.543 m560.1641 80.8164 558.7627 79.4258 557.0488 79.4209 c555.3252 79.4258 553.9326 80.8232 553.9326 82.542 c553.9287 84.2617 555.3281 85.6553 557.0449 85.6553 c558.7627 85.6553 560.1553 84.2588 560.1553 82.543 cfUu0 Ap586.8682 78.6738 m583.6973 78.6777 L582.4277 78.6719 581.4141 78.3809 581.4141 77.1221 C581.4033 72.5322 L589.1426 72.5283 L589.1387 77.1191 L589.1455 78.3809 588.1162 78.6738 586.8682 78.6738 Cf1 Ap588.4961 82.2109 m588.5059 80.4844 587.1055 79.0947 585.3926 79.0918 c583.668 79.0947 582.2754 80.4932 582.2754 82.21 c582.2734 83.9307 583.6719 85.3252 585.3877 85.3252 c587.1055 85.3242 588.4961 83.9277 588.4961 82.2109 cfUu0 Ap598.2246 78.6738 m595.0537 78.6777 L593.7852 78.6719 592.7676 78.3809 592.7676 77.1221 C592.7598 72.5322 L600.4971 72.5283 L600.4951 77.1191 L600.501 78.3809 599.4727 78.6738 598.2246 78.6738 Cf1 Ap599.8545 82.2109 m599.8623 80.4844 598.4629 79.0947 596.749 79.0918 c595.0254 79.0947 593.6318 80.4932 593.6318 82.21 c593.6299 83.9307 595.0283 85.3252 596.7441 85.3252 c598.4629 85.3242 599.8545 83.9277 599.8545 82.2109 cfUu0 Ap577.8955 78.6738 m574.7256 78.6777 L573.4551 78.6719 572.4404 78.3809 572.4404 77.1221 C572.4336 72.5322 L580.168 72.5283 L580.168 77.1191 L580.1729 78.3809 579.1436 78.6738 577.8955 78.6738 Cf1 Ap579.5244 82.2109 m579.5352 80.4844 578.1357 79.0947 576.4199 79.0918 c574.6953 79.0947 573.3037 80.4932 573.3037 82.21 c573.2988 83.9307 574.6992 85.3252 576.417 85.3252 c578.1357 85.3242 579.5244 83.9277 579.5244 82.2109 cfUu0 Ap567.2666 79.0039 m564.0957 79.0088 L562.8281 79.0039 561.8086 78.7119 561.8086 77.4531 C561.8018 72.8633 L569.5391 72.8604 L569.5391 77.4482 L569.5439 78.7119 568.5127 79.0039 567.2666 79.0039 Cf1 Ap568.8955 82.543 m568.9063 80.8164 567.5039 79.4258 565.792 79.4209 c564.0654 79.4258 562.6748 80.8232 562.6729 82.542 c562.6699 84.2617 564.0703 85.6553 565.7881 85.6553 c567.5059 85.6553 568.8955 84.2588 568.8955 82.543 cfUu0 Ap547.625 79.0166 m544.4541 79.0039 L543.1943 78.9971 542.1826 78.7061 542.1865 77.4404 C542.207 64.8369 L549.9424 64.8662 L549.9199 77.4707 L549.9063 78.7295 548.8799 79.0205 547.625 79.0166 Cf1 Ap549.251 82.5537 m549.2549 80.834 547.8643 79.4365 546.1436 79.4316 c544.4287 79.4209 543.0332 80.8145 543.0205 82.5303 c543.0205 84.249 544.4082 85.6553 546.1299 85.6553 c547.8428 85.6631 549.2432 84.2734 549.251 82.5537 cfU*u0 Ap1 D0 0.5 1 0 k605.3105 93.2266 m605.3135 93.9502 604.1055 95.1631 602.6123 95.1699 C493.4854 95.4395 L491.9912 95.4434 490.7783 94.2344 490.7686 93.5098 C487.1016 57.3301 L487.0977 55.0674 488.3047 53.624 489.7979 53.6221 C493.1152 53.6221 L504.7256 53.6221 604.1133 53.5625 Y605.6094 53.5605 606.8223 54.7705 606.8262 57.0322 C605.3105 93.2266 Lf0 D510.7695 73.1992 m492.0059 73.1992 L493.8779 92.0166 L510.8262 91.9736 L510.7695 73.1992 Lf521.1973 56.2373 m514.3994 56.2373 L514.4609 72.8242 L521.2334 72.8242 L521.1973 56.2373 Lf521.2334 73.7393 m514.4609 73.7559 L514.4609 91.9473 L521.2334 91.9473 L521.2334 73.7393 Lf529.4824 56.2373 m522.1309 56.2373 L522.1309 72.8242 L529.4824 72.8242 L529.4824 56.2373 Lf529.5439 73.7178 m522.167 73.7373 L522.2236 91.9463 L529.5439 91.9277 L529.5439 73.7178 Lf550.0615 73.1992 m533.1133 73.1992 L533.1738 91.9209 L550.123 91.876 L550.0615 73.1992 Lf569.71 73.1992 m552.7656 73.1992 L552.8203 91.8721 L569.7705 91.8271 L569.71 73.1992 Lf589.3584 73.1992 m572.4082 73.1992 L572.4697 91.8184 L589.417 91.7793 L589.3584 73.1992 Lf591.9043 73.1992 m591.9639 91.7734 L602.2959 91.7471 L602.9014 73.1992 L591.9043 73.1992 Lf*U1 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk492.6064 55.96 m492.6172 60.748 496.5059 64.6201 501.3008 64.6064 c506.0879 64.5967 509.959 60.7051 509.9502 55.9131 c509.9355 51.124 506.042 47.25 501.2559 47.2637 c496.4609 47.2764 492.5938 51.167 492.6064 55.96 cf/BBAccumRotation (0.184402) XT581.6816 55.7373 m581.6963 60.5264 585.5811 64.4014 590.374 64.3867 c595.1611 64.3779 599.0371 60.4834 599.0215 55.6943 c599.0127 50.9043 595.123 47.0293 590.3311 47.041 c585.542 47.0537 581.665 50.9473 581.6816 55.7373 cf/BBAccumRotation (0.184402) XTUu0 Ap1 D0.8 0.015686 0.31 0 k200.9771 473.9248 m200.0264 480.6719 194.6138 486.7495 188.0854 486.7378 c184.7056 486.7344 177.9434 486.7241 174.562 486.7192 c168.1831 486.709 162.8906 480.3936 161.7808 473.8691 C154.3022 474.6226 153.0137 467.3901 v152 461.6982 153.7539 459.1685 158.4272 459.1685 C164.6978 459.1685 187.7852 459.1685 200.3774 459.1685 c204.9258 459.1685 207.3135 462.6455 207.312 466.1548 c207.3042 469.7935 204.6567 472.8125 200.9771 473.9248 Cf/BBAccumRotation (0.011038) XT0 D0 0 0 0 k183.1743 472.9624 m183.1587 483.9097 L187.0347 483.9165 L192.7715 483.9229 197.4521 479.0806 197.7671 472.981 C183.1743 472.9624 Lf/BBAccumRotation (0.011038) XT179.7583 472.9556 m165.1704 472.937 L165.4629 479.0332 170.1309 483.8911 175.8701 483.8994 C179.7456 483.9043 L179.7583 472.9556 Lf/BBAccumRotation (0.011038) XT0.3 0.3 0.3 1 (Black) 0 0 Xk195.0093 466.5337 m191.752 466.5288 189.1152 463.8828 189.1177 460.6245 c189.1216 457.3667 191.7686 454.7305 195.0259 454.7339 c198.2852 454.7373 200.9243 457.3833 200.9175 460.6416 c200.9131 463.8979 198.2686 466.5391 195.0093 466.5337 cf164.8784 466.4868 m161.6235 466.4814 158.9839 463.8369 158.9907 460.5806 c158.9941 457.3208 161.6401 454.6831 164.8994 454.6899 c168.1548 454.6934 170.7925 457.3359 170.7891 460.5957 c170.7847 463.8555 168.1367 466.4917 164.8784 466.4868 cfu1 Ap0.5 g169.4663 474.7573 m169.5552 474.5972 169.7651 474.5449 169.9297 474.6392 c171.2827 475.4316 l171.4463 475.5259 171.5015 475.728 171.4102 475.8901 c169.6035 478.9878 l169.5093 479.1445 169.3013 479.2002 169.144 479.1074 c167.7813 478.3169 l167.6211 478.2227 167.5601 478.0186 167.6582 477.8555 c169.4663 474.7573 lf0 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk177.418 476.4966 m176.4277 476.502 175.5508 476.4614 174.5503 476.4746 c174.1475 476.48 173.7261 476.3604 173.4307 476.0366 C172.2412 474.7085 171.1943 473.5659 V170.644 474.7085 170.0073 476.0166 169.8579 476.3213 c169.5098 477.0293 168.7397 477.3564 168.0078 477.0142 c167.4214 476.7461 166.9507 476.0264 167.3687 475.1279 c167.5503 474.749 167.8823 474.1909 168.6079 472.9355 C179.7534 472.9355 L179.7207 473.4326 179.6851 473.564 179.6372 474.1187 c179.5059 475.6777 178.5396 476.4951 177.418 476.4966 cf1 Ap173.1958 479.5493 m173.1895 481.0898 174.4351 482.3486 175.98 482.3623 c177.5288 482.3657 178.7891 481.1216 178.7925 479.5776 c178.8027 478.0288 177.5552 476.77 176.0093 476.7598 c174.4624 476.7549 173.2046 478.002 173.1958 479.5493 cfUu0 Ap190.3032 473.9551 m190.3052 475.064 189.3999 475.9678 188.2915 475.9658 C185.4976 475.9624 L184.3887 475.9644 183.4897 475.0625 183.4883 473.9502 C183.5 472.9355 L190.3149 472.9355 L190.3032 473.9551 Lf184.3594 478.7012 m184.3618 477.2959 185.5034 476.1582 186.9043 476.1611 c188.3057 476.1631 189.4429 477.2988 189.4429 478.7046 c189.4429 480.1089 188.3013 481.2446 186.895 481.2446 c185.4932 481.2397 184.3569 480.1069 184.3594 478.7012 cfUu196.5317 473.8237 m196.5327 474.791 195.7446 475.5781 194.7783 475.5767 C192.3438 475.5732 L191.377 475.5747 190.5923 474.7896 190.5913 473.8184 C190.6025 472.9355 L196.5415 472.9355 L196.5317 473.8237 Lf191.3516 477.9614 m191.354 476.7344 192.3481 475.7451 193.5688 475.7466 c194.7905 475.7485 195.7817 476.7393 195.7817 477.9629 c195.7817 479.1885 194.7861 480.1763 193.561 480.1763 c192.3403 480.1729 191.3491 479.187 191.3516 477.9614 cfUUuu0 0.42 1 0 k219.7295 47.168 m219.7295 51.2402 215.647 54.666 210.229 55.5215 C209.7793 57.0391 209.2798 58.7207 208.7783 60.3848 c207.1196 65.8926 203.3193 70.8457 196.647 70.8457 C179.5889 70.8457 L172.4819 70.8457 170.2222 68.1836 167.4546 60.3848 c164.6123 52.3809 163.0552 47.3672 163.4341 42.7773 c163.7451 38.9961 166.6001 38.6055 168.7627 38.6055 C214.5356 38.6055 L221.2061 38.6055 219.7295 42.459 219.7295 47.168 cf1 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk183.2617 40.3105 m183.2617 44.2617 180.0576 47.459 176.105 47.459 c172.1592 47.459 168.96 44.2617 168.96 40.3105 c168.96 36.3594 172.1592 33.1621 176.105 33.1621 c180.0576 33.1621 183.2617 36.3594 183.2617 40.3105 cf214.3091 40.3105 m214.3091 44.2617 211.1084 47.459 207.1533 47.459 c203.2129 47.459 200.0078 44.2617 200.0078 40.3105 c200.0078 36.3594 203.2129 33.1621 207.1533 33.1621 c211.1084 33.1621 214.3091 36.3594 214.3091 40.3105 cf0 Ap0 0 0 0 k186.1519 54.9727 m186.1519 66.9258 L179.8569 66.9258 L174.8784 66.9258 173.7183 65.6406 171.7363 60.4355 c171.5342 59.9043 170.1992 55.9844 169.9976 54.9727 C186.1519 54.9727 Lf190.0586 54.9727 m190.0586 66.9258 L196.5854 66.9258 L201.5649 66.9258 203.9565 64.2598 205.1934 58.9297 c205.3242 58.377 205.8687 55.9844 206.0718 54.9727 C190.0586 54.9727 LfUu1 Ap0.5 g203.0132 57.9805 m202.9097 57.7949 202.6665 57.7344 202.4751 57.8438 c200.9077 58.7617 l200.7183 58.8711 200.6548 59.1074 200.7603 59.293 c202.854 62.8828 l202.9634 63.0645 203.2046 63.1309 203.3853 63.0215 c204.9653 62.1055 l205.1499 61.9961 205.2207 61.7598 205.1069 61.5703 c203.0132 57.9805 lf0 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk193.0962 59.0996 m194.2437 59.1055 195.2603 59.0586 196.4189 59.0762 c196.8862 59.0801 197.374 58.9434 197.7168 58.5664 C199.0952 57.0273 200.3086 55.7031 V200.9458 57.0273 201.6836 58.5449 201.8569 58.8984 c202.2598 59.7168 203.1528 60.0957 204.0005 59.6992 c204.6802 59.3906 205.2256 58.5547 204.7417 57.5137 c204.5308 57.0762 204.146 56.4277 203.3052 54.9727 C190.3896 54.9727 L190.4282 55.5488 190.4692 55.7031 190.5249 56.3438 c190.6768 58.1523 191.7969 59.0977 193.0962 59.0996 cf1 Ap197.9888 62.6387 m197.9961 64.4238 196.5532 65.8828 194.7627 65.8984 c192.9683 65.9023 191.5078 64.459 191.5039 62.6699 c191.4912 60.877 192.9375 59.418 194.729 59.4063 c196.5215 59.3984 197.979 60.8457 197.9888 62.6387 cfUu0 Ap174.6963 56.2891 m174.6943 57.7207 175.8604 58.8867 177.291 58.8848 C180.896 58.8789 L182.3276 58.8828 183.4878 57.7188 183.4897 56.2813 C183.4741 54.9727 L174.6812 54.9727 L174.6963 56.2891 Lf182.3652 62.416 m182.3623 60.5996 180.8901 59.1328 179.0815 59.1348 c177.2729 59.1387 175.8066 60.6055 175.8066 62.418 c175.8066 64.2305 177.2783 65.6953 179.0933 65.6953 c180.9019 65.6895 182.3682 64.2285 182.3652 62.416 cfUUu281.5723 76.7891 m281.3501 77.0059 281.3037 77.293 281.4194 77.4512 c281.5435 77.626 281.7505 77.7031 282.0864 77.5791 c282.4717 77.4307 283.3628 76.7822 283.5244 76.7783 c283.6973 76.7734 288.1919 76.6367 289.0811 76.6094 C285.0156 78.7354 273.978 84.8057 272.2163 85.8193 C272.4341 86.1924 L274.208 85.1689 285.6479 78.8809 289.4971 76.8818 C290.1606 77.6338 291.353 79.0967 291.769 79.4902 c291.8784 79.5898 292.0723 79.5322 292.083 79.3916 c292.1011 79.2363 292.1318 78.9189 292.1519 78.7627 c292.1616 78.6182 292.2559 78.4121 292.3433 78.3018 c292.769 77.793 293.542 76.9287 294.0742 76.3799 c294.2773 76.167 294.0605 75.8564 293.979 75.7432 c293.8242 75.5166 293.4956 75.0557 292.9756 75.2188 c292.6914 75.3047 292.144 75.5371 291.8706 75.6494 c291.7383 75.7031 291.5366 75.6514 291.3931 75.333 c290.9551 74.3672 290.5654 73.4395 290.665 73.2275 c290.9351 72.6807 291.7515 71.1641 292.1143 70.4746 c292.2788 70.1611 292.1475 69.7676 291.8198 69.5957 c291.4961 69.4248 291.0986 69.5352 290.9351 69.8477 c290.6099 70.4668 289.6387 72.3096 Y288.6133 70.498 288.2671 69.8936 v288.0947 69.5889 287.6909 69.4854 287.3711 69.6709 c287.0508 69.8525 286.9346 70.25 287.1104 70.5557 c287.4355 71.1289 288.4087 72.8457 Y285.3979 72.8975 L286.314 71.1455 286.6216 70.5664 v286.7871 70.251 286.6523 69.8584 286.3296 69.6855 c286.0044 69.5156 285.606 69.626 285.4399 69.9424 c285.084 70.6191 284.0156 72.6572 Y282.8828 70.6553 282.5024 69.9893 v282.3257 69.6807 281.9229 69.584 281.6045 69.7676 c281.2856 69.9502 281.1699 70.3447 281.3413 70.6523 c281.7373 71.3398 282.6973 73.001 282.9053 73.4004 c282.998 73.5898 282.9536 75.1387 282.9404 75.7266 c282.9404 75.8311 281.9053 76.4639 281.5723 76.7891 cf/BBAccumRotation (0.030482) XTu1 Ap0.4 g277.4697 90.3496 m277.4102 90.2295 277.2632 90.1719 277.1382 90.2275 c276.0938 90.7051 l275.9712 90.7607 275.915 90.9053 275.9712 91.0303 c277.0527 93.4199 l277.1094 93.54 277.2573 93.5967 277.3813 93.54 c278.4268 93.0635 l278.5493 93.0078 278.6069 92.8623 278.5527 92.7363 c277.4697 90.3496 lf*u0 Ap1 D0.3 0.3 0.3 1 (Black) 0 0 Xk264.7104 69.6592 m264.9126 69.502 265.1484 69.4209 265.3853 69.4092 c265.7534 69.3936 266.1216 69.5488 266.3628 69.8584 C269.9785 74.4531 L270.1777 74.7266 270.2671 74.8936 270.3711 75.2158 C271.3027 78.5254 L272.1411 78.4854 L275.1362 69.9736 L275.2998 69.5088 275.7246 69.2148 276.1914 69.1914 c276.3384 69.1855 276.4878 69.208 276.6338 69.2588 c277.2466 69.4736 277.5693 70.1445 277.3506 70.7568 C274.6738 78.373 L275.501 78.335 L273.8984 86.3672 L273.9194 86.4785 273.9502 86.6553 V274.2139 86.2109 L274.3354 85.9922 274.6108 85.751 274.9702 85.708 C274.9727 85.7061 274.9746 85.7061 274.98 85.7061 C275.396 85.6504 275.7666 85.876 275.9292 86.1045 C275.9512 86.1309 L278.3237 89.6523 L278.6245 90.0967 278.5073 90.7012 278.0605 91.001 c277.6157 91.3018 277.0098 91.1855 276.7109 90.7412 C275.1582 88.4404 L274.9092 88.8604 274.6021 89.375 V274.7666 89.5547 L275.207 89.9404 275.1982 90.6543 274.7446 91.1455 C273.8618 92.2529 273.5435 92.6045 v272.8667 93.3643 271.3423 93.207 270.8057 93.0518 c270.5073 92.9688 270.2563 92.7217 270.1377 92.5508 c269.8691 92.1563 267.1948 87.9268 Y266.856 87.3428 266.877 86.6133 267.564 86.2422 c268.168 85.916 268.9932 85.4805 269.6123 85.1504 C267.8828 78.6777 L268.8857 78.6338 L268.1172 75.8848 L264.52 71.3096 L264.1143 70.8008 264.2026 70.0635 264.7104 69.6592 cf0 D269.4302 87.5771 m269.9287 88.2783 L269.9434 88.0156 269.9556 87.6104 269.9663 87.2607 C269.4302 87.5771 Lf*U268.3184 93.1631 m266.6816 93.2939 267.2432 94.9316 Y267.3584 94.2471 268.0195 94.2471 v268.9775 94.2471 269.0483 95.0654 269.5547 96.3311 c269.8755 97.1318 270.5283 97.791 271.4375 97.9082 c272.6938 98.0762 273.8477 97.1934 274.0146 95.9375 c274.1792 94.6807 273.2969 93.5283 272.0415 93.3633 c271.7505 93.3223 271.4663 93.3428 271.1987 93.4063 C270.6133 93.4395 270.3525 93.3047 269.7671 92.4951 c269.3481 91.9131 269.0386 91.5176 268.1313 91.5791 c266.856 91.6699 266.856 92.9326 Y268.0649 92.5146 268.3184 93.1631 Vf0 0 0 0 k271.4639 96.1738 m271.3335 97.8926 L271.3301 97.9307 271.3579 97.9609 271.3945 97.9648 C271.8579 98.001 L271.8955 98.0078 271.9297 97.9766 271.9307 97.9365 C272.0615 96.2178 L272.3975 96.123 272.6563 95.8262 272.6851 95.459 c272.7227 94.9834 272.3667 94.5703 271.8911 94.5313 c271.4131 94.4951 271.0015 94.8506 270.9639 95.3281 c270.9355 95.6963 271.1445 96.0254 271.4639 96.1738 CfUUu0.3 0.3 0.3 1 (Black) 0 0 Xk399.377 67.4063 m398.9072 67.4316 L398.9951 69.0137 L399 69.1162 398.9219 69.2031 398.8193 69.209 C398.3174 69.2363 L398.2168 69.2422 398.127 69.1641 398.1211 69.0625 C398.0332 67.4814 L397.5654 67.5059 L397.3623 67.5186 397.1875 67.3623 397.1777 67.1611 C396.7119 58.7988 L396.7002 58.5986 396.8545 58.4238 397.0557 58.4111 C398.8711 58.3125 L399.0723 58.3008 399.2471 58.4561 399.2559 58.6592 C399.7236 67.0186 L399.7344 67.2217 399.5781 67.3955 399.377 67.4063 Cf1 Ap0.4 g409.3506 88.3389 m409.335 88.2402 409.2422 88.1689 409.1406 88.1836 c408.624 88.2588 l408.5234 88.2734 408.4521 88.3662 408.4697 88.4658 c409.0557 92.5537 l409.0703 92.6533 409.1631 92.7236 409.2637 92.708 c409.7822 92.6328 l409.8828 92.6191 409.9551 92.5244 409.9395 92.4258 c409.3506 88.3389 lf0 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk414.3281 80.6221 m412.5146 89.8125 L412.5146 89.8145 L412.334 90.707 411.4629 91.2891 410.5693 91.1074 c409.6719 90.9268 409.0898 90.0557 409.2715 89.1602 C409.6074 87.4619 L403.3916 87.4658 402.9199 87.4658 v400.8467 87.4658 399.2275 86.2119 398.9834 84.3242 c398.9326 83.9248 397.0703 70.1299 Y396.9639 69.2227 397.6084 68.3975 398.5146 68.2891 c399.4229 68.1787 400.248 68.8262 400.3564 69.7324 C401.5703 79.3789 L401.5703 78.8193 401.1172 68.9922 Y401.5703 68.9922 L401.5703 61.002 401.5703 52.252 Y401.5703 51.1992 402.4297 50.3418 403.4844 50.3418 c404.54 50.3418 405.3906 51.1992 405.3906 52.2539 C405.3906 68.9922 L406.2168 68.9922 L406.2168 52.2549 L406.2168 51.1992 407.0723 50.3418 408.1299 50.3418 c409.1846 50.3418 410.04 51.1992 410.04 52.2549 C410.04 68.9922 L410.4824 68.9922 L410.0381 80.9746 L410.9531 79.8086 411.3887 79.2637 v411.8447 78.6875 412.3916 78.5537 412.8613 78.6494 c413.9512 78.8682 414.5107 79.7266 414.3281 80.6221 Cf0 0 0 0 k407.5664 87.4707 m405.6592 80.6396 L403.75 87.4707 L407.5664 87.4707 Lf405.1045 73.7568 m405.6592 76.3984 L406.2158 73.7568 L405.1045 73.7568 Lfu1 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk406.0098 86.1621 m405.2861 86.1621 L404.918 87.4707 L406.3789 87.4707 L406.0098 86.1621 Lf406.0098 86.0332 m405.2861 86.0332 L404.5508 81.4121 L405.6279 77.2256 L406.7471 81.4121 L406.0098 86.0332 LfU409.1729 91.3047 m409.1768 93.1572 407.6719 94.6572 405.8213 94.6572 c403.9678 94.6572 402.4707 93.1572 402.4707 91.3047 c402.4707 89.4551 403.9678 87.9512 405.8213 87.9512 c407.6729 87.9531 409.1768 89.4551 409.1729 91.3047 cfUu0 Ap340.2266 75.6133 m341.4609 72.7881 343.3047 68.7881 Y343.5879 68.1445 344.3799 67.8682 345.0723 68.1748 c345.7676 68.4814 346.1035 69.2471 345.8223 69.8926 C342.7793 76.7559 L340.2266 75.6133 Lf/BBAccumRotation (0.510608) XT341.6455 80.8506 m339.3828 79.8555 L338.7617 79.5791 338.4561 78.8555 338.7344 78.1855 c338.8379 77.9365 339.04 77.4551 339.1836 77.1201 C342.5957 78.6211 L341.6455 80.8506 Lf*u1 D350.6016 73.9941 m349.2227 73.9922 347.9385 73.5781 346.8652 72.8691 C345.6523 74.5205 L347.0762 78.0645 L346.3457 78.3564 L345.4111 76.0244 L333.9688 77.6758 L332.2988 81.7598 L334.6641 82.749 L334.8643 82.834 334.959 83.0645 334.876 83.2646 c334.791 83.4648 334.5605 83.5605 334.3594 83.4756 C331.2754 82.1855 L333.2578 77.332 L331.4648 73.4941 L330.6953 73.7939 329.8555 73.959 328.9805 73.957 c325.21 73.9512 322.1563 70.8906 322.1641 67.1211 c322.1699 63.3486 325.2334 60.2979 329.0039 60.3057 c332.7725 60.3135 335.8242 63.3711 335.8184 67.1436 c335.8145 69.7559 334.3398 72.0244 332.1816 73.168 C332.707 74.291 L342.4902 66.5654 L343.8145 66.5723 L344.1182 63.0762 347.0518 60.3359 350.626 60.3428 c354.3965 60.3477 357.4473 63.4092 357.4395 67.1787 c357.4336 70.9463 354.373 74 350.6016 73.9941 cf0 D334.6035 67.1416 m334.6084 64.0439 332.1006 61.5234 329 61.5205 c325.9023 61.5117 323.3848 64.0225 323.3789 67.124 c323.373 70.2207 325.8838 72.7383 328.9824 72.7441 c329.6738 72.7441 330.3359 72.6152 330.9473 72.3867 C329.0684 68.3711 L329.041 68.3721 329.0156 68.376 328.9883 68.3779 c328.3008 68.376 327.7422 67.8184 327.7441 67.1299 c327.7461 66.4404 328.3057 65.8838 328.9922 65.8838 c329.6836 65.8857 330.2383 66.4453 330.2383 67.1338 c330.2383 67.5117 330.0664 67.8467 329.7988 68.0752 C331.668 72.0654 L333.4121 71.1172 334.5996 69.2686 334.6035 67.1416 cf342.1465 67.876 m333.0498 75.0215 L333.9238 76.8867 L345.1113 75.2754 L342.1465 67.876 Lf343.792 67.3584 m342.7852 67.3535 L345.3057 73.6426 L346.2324 72.4004 L344.7822 71.1895 343.8477 69.3828 343.792 67.3584 Cf346.9619 71.4238 m349.5996 67.8916 L349.4941 67.7422 349.4199 67.5703 349.3867 67.3818 C345.0117 67.3623 L345.0664 68.9863 345.8115 70.4355 346.9619 71.4238 Cf350.623 61.5547 m347.7188 61.5498 345.3301 63.751 345.0322 66.5762 C349.5117 66.5947 L349.7207 66.1953 350.1348 65.9209 350.6152 65.9209 c351.3037 65.9248 351.8613 66.4805 351.8613 67.1689 c351.8594 67.8584 351.3008 68.415 350.6113 68.4131 c350.4814 68.4141 350.3574 68.3887 350.2383 68.3516 C347.5947 71.8965 L348.4668 72.4492 349.4961 72.7773 350.6055 72.7803 c353.7041 72.7861 356.2207 70.2773 356.2256 67.1787 c356.2305 64.0781 353.7227 61.5596 350.623 61.5547 cf*U332.9629 84.0488 m336.1992 85.2949 L338.6992 87.4824 339.2119 87.8604 v340.0342 88.4697 341.0166 88.7617 341.6152 88.9668 c342.7441 89.3535 344.0205 88.8545 344.4873 87.75 c345.5 85.3535 346.543 82.916 347.5898 80.5313 c348.1074 79.3438 347.5166 78.167 346.7598 77.8398 c344.8926 77.0254 340.084 74.9297 Y343.6162 66.9463 L343.9023 66.3057 343.5703 65.5391 342.877 65.2285 c342.1816 64.9229 341.3887 65.1943 341.1055 65.8359 C337.9521 72.8145 336.9727 75.1719 v336.6924 75.8457 336.998 76.5684 337.6211 76.8457 C342.0996 78.8242 L339.5586 84.8652 L337.7939 83.3262 L337.5684 83.1455 337.4688 83.084 337.1973 82.9678 C334.7031 82.0059 333.8721 81.6875 v333.7012 81.6191 333.5195 81.5947 333.3467 81.6035 c332.8672 81.6318 332.4219 81.9336 332.2363 82.4141 c331.9854 83.0664 332.3105 83.7988 332.9629 84.0488 Cf1 Ap342.75 91.4238 m342.748 92.918 341.5361 94.124 340.041 94.1221 c338.5488 94.1201 337.3408 92.9072 337.3418 91.4131 c337.3457 89.9209 338.5576 88.7109 340.0527 88.7129 c341.5439 88.7148 342.7539 89.9297 342.75 91.4238 cf0.5 g343.8389 80.1387 m343.8867 80.0273 343.8301 79.8994 343.7197 79.8496 c342.459 79.3145 l342.3457 79.2676 342.2139 79.3223 342.166 79.4355 c341.0586 82.0596 l341.0098 82.1719 341.0625 82.2998 341.1758 82.3496 c342.4385 82.8848 l342.5508 82.9316 342.6836 82.877 342.7275 82.7656 c343.8389 80.1387 lf/BBAccumRotation (1.065612) XT0 Ap0 0 0 0 k340.4355 92.0283 m340.4619 94.0752 L340.4648 94.1162 340.4297 94.1582 340.3848 94.1563 C339.833 94.168 L339.792 94.1709 339.7539 94.1348 339.7539 94.0908 C339.7256 92.0557 L339.3242 91.9229 339.0303 91.5566 339.0225 91.1113 c339.0088 90.5469 339.4551 90.0811 340.0195 90.0664 c340.584 90.0566 341.0527 90.5039 341.0625 91.0684 c341.0742 91.5 340.8115 91.8691 340.4355 92.0283 CfUuu*u1 D0.21749 0.194353 0.224431 0.4956 k188.6196 155.4053 m230.5513 155.2783 L230.7646 155.2764 230.8789 155.4434 230.811 155.6494 C230.1948 157.4795 L230.1289 157.6855 229.8994 157.8525 229.687 157.8564 C225.7412 157.8691 L225.7554 161.7344 L229.5073 161.7207 L229.5884 161.7266 229.6621 161.7979 229.6621 161.8936 C229.6709 164.8301 L229.6709 164.9219 229.606 164.9971 229.5186 164.9971 C225.7666 165.0107 L225.7695 165.6484 L229.5195 165.6357 L229.606 165.6338 229.6753 165.71 229.6753 165.8047 C229.6836 168.7393 L229.6831 168.832 229.6172 168.9082 229.5303 168.9082 C225.7798 168.9238 L225.7832 170.4248 L225.7876 170.5215 225.7158 170.6094 225.6299 170.6064 C224.2046 170.6123 L224.1182 170.6123 224.043 170.5293 224.043 170.4316 C224.041 168.9287 L194.8335 169.0107 L194.8398 170.5117 L194.8398 170.6123 194.772 170.6953 194.6821 170.6953 C193.2544 170.7041 L193.1709 170.7012 193.0981 170.6172 193.0981 170.5195 C193.0938 169.0146 L189.3423 169.0283 L189.2588 169.0283 189.1885 168.9551 189.1885 168.8574 C189.1797 165.9238 L189.1777 165.8311 189.2466 165.7529 189.3311 165.7559 C193.0825 165.7402 L193.0796 165.1035 L189.3311 165.1182 L189.2432 165.1182 189.1777 165.0449 189.1753 164.9492 C189.1641 162.0137 L189.1641 161.9209 189.2324 161.8428 189.3193 161.8438 C193.0698 161.8291 L193.0547 157.9629 L189.5024 157.9746 L189.2905 157.9746 189.0596 157.8066 188.9932 157.6025 C188.3623 155.7793 L188.2935 155.5732 188.4087 155.4053 188.6196 155.4053 Cf0 D194.8237 165.7383 m224.0278 165.6514 L224.0254 165.0166 L194.8213 165.0977 L194.8237 165.7383 Lf194.8115 161.8262 m224.0166 161.7451 L224.0005 157.8721 L194.7959 157.9551 L194.8115 161.8262 Lf*U231.8584 152.5273 m231.2437 154.3535 L231.1777 154.5605 230.9492 154.7324 230.7354 154.7324 C188.4326 154.8525 L188.2217 154.8555 187.9912 154.6885 187.9229 154.4824 C187.2949 152.6592 L187.2231 152.4512 187.3389 152.2871 187.5518 152.2852 C191.6685 152.2725 L191.6089 140.7705 L191.6123 140.6689 191.6792 140.5889 191.7681 140.584 C193.73 140.5762 L193.8164 140.5762 193.8887 140.6572 193.8887 140.7607 C193.9438 152.2627 L224.8188 152.1758 L224.7612 140.6729 L224.7603 140.5742 224.8306 140.4863 224.9155 140.4863 C226.8789 140.4805 L226.9644 140.4824 227.0371 140.5645 227.0371 140.6689 C227.0918 152.1709 L231.6025 152.1533 L231.8145 152.1533 231.9292 152.3203 231.8584 152.5273 CfUu0.3 0.3 0.3 1 (Black) 0 0 Xk210.4224 164.5566 m209.9854 165.9014 209.2197 168.1475 208.7637 169.5879 c207.6582 173.0234 207.1353 173.6953 204.8652 173.7031 c204.5732 173.7031 200.6235 173.7031 200.3711 173.7002 c198.0996 173.7031 197.5737 173.043 196.4609 169.6094 c195.9912 168.1748 195.2231 165.9346 194.7817 164.5879 c194.1787 162.7783 194.4644 161.0693 195.9956 160.4893 c196.6016 160.2588 198.8027 159.4248 Y198.7939 156.5566 L206.373 156.5498 L206.3809 159.4111 L208.5825 160.2354 209.1914 160.4648 v210.7231 161.043 211.0151 162.749 210.4224 164.5566 cf0 0 0 0 k208.6846 159.2129 m208.5176 159.3701 208.1367 159.7344 Y207.8306 165.2939 207.7285 167.1465 v207.7227 167.2363 207.6406 167.3096 207.5493 167.3096 c204.6567 167.3232 198.8667 167.3232 195.9736 167.3311 c195.8799 167.3311 195.811 167.2725 195.8135 167.1787 c195.9209 165.21 196.1406 161.2578 196.248 159.2842 c196.251 159.1875 196.3335 159.0996 196.4282 159.1025 c199.4878 159.0967 205.9258 159.0811 208.6694 159.0801 c208.7573 159.0771 208.7617 159.1406 208.6846 159.2129 cf0.3 0.3 0.3 1 (Black) 0 0 Xk203.4419 158.5254 m203.5781 159.6406 204.5884 160.4307 205.7021 160.2939 c206.811 160.166 207.6064 159.1533 207.4722 158.043 C205.5273 141.7871 l205.3921 140.6768 204.3794 139.8818 203.2705 140.0146 c202.1567 140.1504 201.3638 141.1631 201.499 142.2734 C203.4419 158.5254 lf/BBAccumRotation (0.115818) XT201.1836 158.5313 m201.0527 159.6445 200.0435 160.4424 198.9297 160.3145 c197.8184 160.1807 197.019 159.1738 197.1499 158.0615 C199.0376 141.8027 l199.165 140.6855 200.1733 139.8926 201.2866 140.0215 c202.4004 140.1504 203.1978 141.1563 203.0674 142.2734 C201.1836 158.5313 lf/BBAccumRotation (0.115818) XT1 Ap205.9414 177.4434 m205.9434 179.2725 204.4644 180.7598 202.6313 180.7637 c200.7983 180.7676 199.3135 179.2852 199.3066 177.4502 c199.3032 175.6211 200.7881 174.1367 202.6138 174.1318 c204.4521 174.1318 205.939 175.6104 205.9414 177.4434 cfUu0 Ap227.6235 163.8711 m226.9922 165.3096 226.354 167.0107 225.7485 168.3555 c224.4121 171.3184 223.4424 172.0332 221.0083 172.0332 c220.7217 172.0332 219.1313 172.041 218.8813 172.041 c216.0815 172.041 215.354 171.4014 214.0801 168.4043 c213.5488 167.1553 212.6406 165.1416 212.2017 163.9443 c211.6094 162.334 211.8843 160.8154 213.3945 160.29 c213.9907 160.083 216.1567 159.3359 Y216.1455 156.3691 L223.6138 156.3359 L223.6304 159.2998 L225.8037 160.0303 226.4023 160.2285 v227.9136 160.7422 228.311 162.3027 227.6235 163.8711 cf0 0 0 0 k225.9189 159.2461 m225.7554 159.3975 225.3765 159.7598 Y225.0879 165.2773 224.9897 167.1221 v224.9824 167.208 224.9043 167.2793 224.8086 167.2793 c221.9409 167.3027 216.1973 167.3174 213.3237 167.3311 c213.2344 167.3311 213.1636 167.2773 213.167 167.1855 c213.2671 165.2246 213.4736 161.3018 213.5835 159.3438 c213.5845 159.2539 213.6646 159.1621 213.7554 159.1621 c216.79 159.1484 223.1831 159.1211 225.9058 159.1094 c225.9907 159.1094 226 159.1699 225.9189 159.2461 cf0.3 0.3 0.3 1 (Black) 0 0 Xk222.979 160.0146 m223.8301 160.374 224.9248 159.8574 225.4238 158.8643 c225.9165 157.8721 225.6333 156.7832 224.7813 156.4268 C215.3779 152.8613 212.2183 151.5801 v211.1694 151.1504 210.3203 151.4541 209.9434 152.2656 c209.5635 153.0625 209.7056 153.8135 210.9087 154.3779 c213.9951 155.832 222.979 160.0146 yf214.4028 158.0674 m214.2334 159.2002 215 160.2227 216.1138 160.3477 c217.2295 160.4746 218.2705 159.6602 218.4399 158.5313 C219.9336 146.1963 220.52 142.0127 v220.7158 140.6279 220.2168 139.7939 219.311 139.7197 c218.418 139.6455 217.6904 140.1396 217.3896 141.7656 c216.6147 145.9395 214.4028 158.0674 yf220.188 179.3701 m220.7285 179.3174 221.2207 179.1348 221.6489 178.8525 C221.8096 178.9541 221.9873 179.0322 222.1812 179.0645 c223.123 179.2285 224.0869 178.457 224.333 177.3428 c224.5815 176.2363 224.0278 175.2188 223.0996 175.04 C223.2275 174.2891 223.2529 173.6875 223.7104 173.5947 c224.0234 173.5303 224.1245 173.8877 224.019 174.0254 c223.8584 174.2285 223.5654 174.0889 Y223.6602 174.2773 223.8716 174.2725 v223.9971 174.2695 224.2539 174.21 224.333 173.8662 c224.4478 173.3916 223.8652 172.9629 223.4019 172.918 c222.999 172.8848 222.5474 173.0488 222.1836 173.5303 C221.5293 172.8652 220.6079 172.4854 219.6216 172.584 c217.8237 172.7559 216.4937 174.4111 216.6475 176.2871 c216.8032 178.1621 218.3892 179.543 220.188 179.3701 cfUUu1 Ap0.184314 0.164706 0.190196 0.42 k582.96 288.0693 m583.0391 287.8994 583.0088 287.7793 582.9023 287.8018 c579.8291 288.373 l579.7188 288.3975 579.5684 288.5498 579.4912 288.7188 c576.6689 295.0586 l576.5957 295.2314 576.6221 295.3516 576.7285 295.3291 c579.8018 294.7539 l579.9121 294.7334 580.0596 294.5791 580.1357 294.4072 c582.96 288.0693 lf/BBAccumShear (162.896027 270.000000) XTu0 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk584.292 265.5234 m584.125 270.4199 L582.2197 264.8643 579.8574 257.9707 579.8535 257.9697 C579.501 256.9453 580.0488 255.8262 581.0752 255.4736 c582.1045 255.123 583.2207 255.6719 583.5752 256.7002 C586.417 264.9629 L584.9316 264.9141 L584.5898 264.9043 584.3066 265.1807 584.292 265.5234 Cf599.3301 258.2822 m596.791 264.7354 594.7012 270.1377 V594.8477 265.8838 L594.8584 265.5322 594.5918 265.2412 594.2451 265.2305 C592.4814 265.168 L595.6572 256.873 L596.04 255.8652 597.1797 255.3545 598.1953 255.7383 c599.2129 256.1338 599.7188 257.2646 599.3301 258.2822 Cf594.4521 269.2354 m594.3525 269.0605 594.1641 268.9375 593.8623 268.8672 c593.4561 268.7695 591.1836 268.4795 590.1016 268.3721 C590.1143 267.9766 L590.1143 267.9551 590.0898 267.9346 590.0674 267.9336 C588.9473 267.8926 L588.9199 267.8926 588.8984 267.9111 588.8975 267.9385 C588.8877 268.3291 L587.79 268.3545 585.5508 268.4795 585.1348 268.5645 c584.8135 268.6309 584.5928 268.7207 584.4814 268.8906 C584.5645 266.5059 584.5898 265.7158 v584.6006 265.4229 584.8535 265.1865 585.1553 265.1973 c587.376 265.2744 591.8154 265.4277 594.0371 265.5029 c594.3379 265.5156 594.5732 265.7676 594.5615 266.0596 c594.5381 266.8535 594.4521 269.2354 Yf590.4561 272.9424 m590.4561 272.8789 590.4326 272.8027 590.3818 272.7568 C588.2969 272.6816 L588.251 272.7314 588.2197 272.8027 588.2148 272.8652 c588.2148 272.9277 588.1963 273.0303 588.2871 273.0342 c588.874 273.0566 589.834 273.0898 590.3701 273.1094 c590.458 273.1074 590.4512 273.0029 590.4561 272.9424 cf*u1 D594.3496 272.1963 m594.3447 272.4971 594.0879 272.7324 593.7871 272.7236 C593.125 272.7002 L593.125 272.8027 L593.1221 272.8486 593.0859 272.8809 593.042 272.8789 C592.2158 272.8506 L592.1729 272.8525 592.1416 272.8115 592.1416 272.7715 C592.1416 272.6631 L591.043 272.6289 L590.9717 272.748 590.9033 272.9531 590.9189 273.1074 c590.9453 273.293 591.0254 273.4268 591.0195 273.6309 c591.0098 273.8506 590.8945 273.9668 590.6455 273.9609 C590.5039 273.9551 L590.207 273.7275 589.8398 273.5605 589.4404 273.5547 c588.9932 273.5479 588.666 273.6836 588.3682 273.8779 C587.9346 273.8672 L587.7188 273.8604 587.5664 273.7305 587.6064 273.5107 c587.6348 273.3438 587.708 273.1953 587.748 272.999 c587.7764 272.8486 587.71 272.6338 587.6475 272.5098 C586.543 272.4727 L586.5391 272.5762 L586.5391 272.6191 586.5039 272.6514 586.4619 272.6514 C585.6377 272.6211 L585.5947 272.6211 585.5596 272.582 585.5596 272.541 C585.5645 272.4375 L584.9043 272.417 L584.6045 272.4043 584.3662 272.1523 584.377 271.8516 C584.4629 269.4033 L584.4883 269.0801 584.6621 268.9199 585.1123 268.8027 c585.5762 268.6885 588.5947 268.5137 589.3193 268.5322 c589.418 268.5322 589.5205 268.5352 589.6191 268.5391 c590.2363 268.5586 593.2773 268.9678 593.8271 269.1064 c594.2705 269.2178 594.4268 269.3896 594.4365 269.6992 C594.3496 272.1963 Lf0 D589.6152 268.7158 m589.543 268.7158 589.3955 268.7129 589.3232 268.708 c589.2227 268.7031 588.874 268.7344 588.8701 268.7969 C588.8584 269.0654 L588.8584 269.0869 588.8789 269.1064 588.9043 269.1084 C590.0303 269.1475 L590.0527 269.1475 590.0752 269.1318 590.0771 269.1064 C590.084 268.8418 L590.084 268.7891 589.7188 268.7207 589.6152 268.7158 cf590.5732 272.6094 m588.1182 272.5254 L588.0605 272.6162 588.0264 272.75 588.0186 272.8623 c588.0117 272.9824 587.9961 273.1777 588.0977 273.1797 c588.79 273.2061 589.915 273.2412 590.5439 273.2656 c590.6475 273.2695 590.6436 273.0742 590.6475 272.9551 c590.6543 272.8389 590.623 272.7021 590.5732 272.6094 Cf*U593.8086 273.5156 m593.1758 281.7969 592.8408 286.502 v592.5625 290.4375 590.2852 290.876 589.2939 290.8682 c588.9824 290.8604 588.6494 290.8574 588.2959 290.7725 c587.3184 290.543 586.6143 289.9678 585.8232 288.9141 c584.9336 287.7285 583.2383 285.5205 Y581.2549 289.3506 L580.8682 290.0898 579.9609 290.3799 579.2158 289.9961 c578.4717 289.6162 578.1855 288.7012 578.5713 287.958 C581.6045 282.0938 L581.6279 282.0498 L581.8438 281.668 582.377 281.2539 583.0283 281.2676 c583.0322 281.2676 583.0391 281.2676 583.042 281.2695 c583.6064 281.2764 584.0713 281.5957 584.2988 281.9131 C585.1309 283.0059 L585.1211 282.7842 584.7949 273.3438 Y585.1328 273.3555 L585.0586 273.127 584.9756 272.9102 584.8926 272.6729 C585.3428 272.6816 L585.3408 272.7744 585.4102 272.8574 585.498 272.8574 C586.5947 272.8965 L586.6807 272.8994 586.7568 272.8447 586.7588 272.7061 C587.4717 272.7188 L587.4893 272.8262 587.4863 272.9434 587.4648 273.0342 C587.3467 273.4395 587.3418 273.6348 v587.3291 273.9307 587.5986 274.082 587.8506 274.0898 C588.1035 274.0967 L587.792 274.4063 587.5986 274.8438 587.5889 275.373 c587.5752 275.9414 587.416 287.2451 Y587.7256 287.2471 L587.8945 275.3799 L587.9063 274.7891 588.4736 273.8623 589.4063 273.8828 c590.4189 273.8984 590.915 274.8438 590.9033 275.4004 C590.7119 287.3047 L591.0195 287.3125 L591.2109 275.4043 L591.2139 274.9395 591.0371 274.5117 590.7471 274.1855 C590.75 274.1855 L591.0781 274.1963 591.2676 274.0381 591.2803 273.75 c591.2842 273.5742 591.0869 273.1377 591.1875 272.8691 C591.8945 272.8945 L591.9023 272.9033 L591.9014 272.9531 591.917 273 591.9482 273.0342 c591.9746 273.0645 592.0146 273.0811 592.0508 273.083 C593.1533 273.1201 L593.2373 273.1201 593.3125 273.0469 593.3125 272.9531 C593.3145 272.9424 L593.6182 272.9531 L593.541 273.1416 593.4707 273.3262 593.4014 273.5078 C593.8086 273.5156 Lf1 Ap592.4551 294.5352 m592.4229 296.3613 590.9131 297.8145 589.0889 297.7803 c587.2617 297.7441 585.8066 296.2373 585.8418 294.4092 c585.876 292.582 587.3857 291.1279 589.2129 291.1641 c591.041 291.1992 592.4922 292.709 592.4551 294.5352 cfUUuu0 Ap469.1846 284.0156 m465.9443 287.3594 L465.459 287.874 464.6387 287.8906 464.1299 287.4043 c463.6162 286.9102 463.5977 286.0908 464.0889 285.5801 C467.3262 282.0293 L469.1846 284.0156 Lf1 Ap0.6 g464.6826 284.208 m464.751 284.0684 464.7354 283.9561 464.6406 283.9707 c461.9551 284.3604 l461.8643 284.3711 461.7266 284.498 461.6563 284.6426 c458.9775 290.0215 l458.9092 290.168 458.9268 290.2725 459.0205 290.2578 c461.7041 289.874 l461.7998 289.8584 461.9326 289.7334 462.0068 289.5908 c464.6826 284.208 lf/BBAccumShear (162.896027 270.000000) XT0 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk475.5059 257.9717 m473.4834 269.0195 L475.0615 269.1162 L472.1084 279.4639 L472.1846 281.3369 472.2041 282.6582 v472.2588 285.7412 472.2061 287.668 470.7559 288.043 c470.0439 288.2285 468.1416 288.4053 467.2637 287.3945 c466.8535 286.9199 465.708 285.4355 Y465.1211 284.7725 465.127 283.8271 465.7148 283.3301 C465.9219 283.1182 L465.1846 282.1963 L463.2021 285.498 L462.8408 286.1055 462.0518 286.3018 461.4463 285.9404 c460.833 285.582 460.6357 284.7861 460.9951 284.1826 C463.874 279.3584 L463.9004 279.3232 L464.0986 279.0107 464.5684 278.6875 465.1211 278.7295 C465.1289 278.7324 465.1289 278.7324 465.1396 278.7324 C465.6143 278.7676 465.9668 279.082 466.167 279.3359 c466.3359 279.5527 466.5332 279.8066 466.7461 280.083 C466.8564 279.5459 466.9385 279.1445 Y465.0068 268.4873 L466.3877 268.5742 L465.457 257.624 L465.3779 256.7686 466.0166 256.0205 466.8701 255.9463 c467.0742 255.9297 467.2764 255.9541 467.4619 256.0117 c468.0449 256.1895 468.4941 256.7051 468.5488 257.3594 C469.5186 268.7686 L470.3613 268.8223 L472.4521 257.4131 L472.6016 256.5684 473.4141 256.0117 474.2588 256.1709 c474.457 256.2051 474.6455 256.2793 474.8105 256.3867 c475.3271 256.7129 475.624 257.335 475.5059 257.9717 Cf475.1816 290.623 m475.0146 289.8848 474.1172 289.7725 v473.0928 289.6416 472.8125 290.5234 472.292 292.3252 c471.96 293.4609 471.1572 294.4482 469.9307 294.7354 c468.2373 295.1357 466.542 294.0859 466.1406 292.3906 c465.7432 290.6934 466.7949 288.999 468.4883 288.5996 c468.8809 288.5068 469.2734 288.4961 469.6484 288.5498 C471.041 288.5928 471.5479 288.2266 472.377 287.1357 c473.0879 286.1963 474.2666 286.0107 475.2031 286.6357 c477.0381 287.8594 475.1816 290.623 YfUu437.2275 272.6699 m436.1182 272.6631 435.1738 271.5439 435.1719 269.4082 c435.1719 269.1201 435.1885 268.8174 435.2266 268.4893 c435.5225 265.6875 436.4209 262.0273 436.4189 259.5918 c436.4102 258.0518 436.0723 257.1641 435.2363 257.0596 c435.165 257.0488 435.0986 257.0449 435.0342 257.0449 C434.0371 256.9609 433.7598 258.543 433.3398 260.7012 c432.9893 262.3955 432.458 264.3535 431.0176 265.7725 C431.5381 265.7432 432.3311 265.7021 432.7646 265.7217 c433.583 265.751 433.8145 266.5703 433.9229 266.9648 c433.9814 267.1729 434.1309 267.7148 433.7314 267.918 c432.7061 268.4199 431.1816 269.2568 430.3252 269.7598 c430.1416 269.8711 429.9063 270.1182 429.8203 270.3115 c429.7168 270.5264 429.5264 270.873 429.4385 271.0928 c429.3105 271.4121 428.8496 271.4717 428.6396 271.0332 c427.8887 269.4814 427.6992 267.8613 426.7393 266.4707 c425.0166 263.9531 423.79 261.5908 423.1055 259.0674 c423.0244 258.7588 422.9521 258.4688 422.8916 258.2021 C422.582 258.8271 422.3906 259.5752 422.3525 260.1309 c422.2568 261.4736 421.7256 262.0615 420.999 261.7637 c420.2041 261.4424 420.2686 259.2783 420.8311 257.6523 c421.5986 255.4287 422.4902 255.4277 423.8125 255.4658 C423.9883 255.4307 428.5088 255.4336 430.8906 255.4443 C430.9297 255.7178 430.9639 256.1875 430.7598 256.3506 C430.7393 256.3682 430.7246 256.3828 430.7051 256.3955 c430.2637 256.6836 429.3252 256.7266 429.3213 256.7266 C429.1543 256.7305 L429.1533 256.8994 L429.1445 256.9033 429.1074 258.6377 428.1074 259.5752 c427.4912 260.1592 426.5186 260.4883 424.833 259.9238 c424.7383 259.8906 424.6396 259.9434 424.6074 260.0342 c424.5859 260.0986 424.6045 260.168 424.6465 260.2119 C424.668 260.2314 424.6924 260.249 424.7188 260.2588 c426.4736 260.8623 427.6416 260.5146 428.3535 259.8301 c429.2842 258.9268 429.457 257.5371 429.4941 257.0693 C429.7236 257.0498 430.1543 257.001 430.543 256.8594 C430.2344 258.2041 429.6484 260.9932 429.3789 262.1465 C429.377 262.1484 L429.3633 262.2109 429.3828 262.2705 429.4209 262.3115 C429.4453 262.3359 429.4756 262.3525 429.5107 262.3613 c429.6035 262.3838 429.7021 262.3223 429.7207 262.2275 C430.0117 260.9766 430.6729 257.8232 430.9521 256.6465 C430.9678 256.6338 430.9883 256.6201 431.0029 256.6055 c431.3262 256.2656 431.3076 255.7627 431.2568 255.4453 C431.4385 255.4443 431.6094 255.4453 431.7529 255.4463 c432.3057 255.4473 432.5791 255.7666 432.4678 256.2773 c432.0693 258.1094 431.1699 262.7217 430.9521 264.3486 c430.918 264.5879 430.8799 264.9082 430.8682 265.1865 C432.0273 263.9082 432.4941 262.1855 432.8232 260.5947 c433.2705 258.5596 433.3818 256.6016 435.0342 256.5166 C435.1221 256.5166 435.2139 256.5225 435.3115 256.5371 c436.5898 256.7373 436.9541 258.0391 436.9473 259.5918 c436.9434 262.1377 436.0371 265.7939 435.75 268.5479 c435.7148 268.8564 435.7002 269.1406 435.7002 269.4082 c435.7129 271.4268 436.5361 272.1406 437.2275 272.1426 c437.9277 272.1494 438.7549 271.4033 438.8193 269.9072 c438.8232 269.7617 438.9473 269.6484 439.0928 269.6523 c439.2373 269.6592 439.3496 269.7822 439.3457 269.9268 C439.3457 269.9287 L439.2832 271.6016 438.3096 272.6631 437.2275 272.6699 cf1 Ap0.6 g451.7451 284.123 m451.7314 284.041 451.7764 283.9834 451.8242 284.002 c453.4395 284.5273 l453.498 284.5498 453.5527 284.6299 453.5596 284.7148 c453.877 287.8643 l453.8789 287.9482 453.8457 288 453.7861 287.9834 c452.1777 287.4551 l452.123 287.4434 452.0635 287.3564 452.0557 287.2676 c451.7451 284.123 lf/BBAccumShear (326.226196 175.919159) XTu0 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk440.6191 255.4023 m441.6348 255.3008 442.541 256.0391 442.6445 257.0488 C444.2471 272.9463 L444.5488 272.9287 L446.5654 257.1309 L446.6934 256.1191 447.6133 255.4043 448.6289 255.5313 c449.6318 255.6572 450.3496 256.5771 450.2188 257.5898 C450.2148 257.5898 448.9238 267.6406 448.1934 273.3906 C448.2246 274.4297 448.2881 276.5244 448.3457 278.7441 C448.4619 278.6553 448.5918 278.5752 448.7441 278.5244 C448.751 278.5205 448.7539 278.5244 448.7617 278.5176 C449.3281 278.3232 449.9238 278.5381 450.2168 278.8164 C450.2559 278.8477 L454.6123 283.1729 L455.1602 283.7188 455.165 284.6133 454.6123 285.1602 c454.0684 285.7061 453.1777 285.7139 452.6279 285.1699 C449.7803 282.3428 L449.0029 284.4053 448.3584 286.1328 V448.0889 288.5498 446.8887 289.293 446.0674 289.5273 c445.7402 289.6289 445.4268 289.6445 445.1367 289.6602 c444.2939 289.7188 442.9297 289.6777 441.8984 287.0625 c440.5605 283.6777 436.4883 273.5596 Y436.1924 272.7832 436.584 271.9131 437.3594 271.6104 c438.1377 271.3184 439.0117 271.707 439.3027 272.4863 C440.0195 274.3018 440.9014 276.5332 V440.8408 275.6738 440.7871 274.9092 440.75 274.3389 C440.0605 267.8418 438.9805 257.4355 Y438.8711 256.418 439.6035 255.5117 440.6191 255.4023 cf448.7334 292.8408 m448.8525 294.5449 447.5654 296.0205 445.8594 296.1396 c444.1563 296.2568 442.6777 294.9717 442.5596 293.2627 c442.4434 291.5635 443.7305 290.0869 445.4316 289.9668 c447.1377 289.8467 448.6152 291.1309 448.7334 292.8408 cfUUUu1 Ap0.5 g391.3213 281.3574 m391.2363 281.2021 391.251 281.083 391.3574 281.0947 c394.3271 281.3877 l394.4316 281.3975 394.5908 281.5332 394.6748 281.6836 c397.8906 287.4785 l397.9746 287.6367 397.96 287.752 397.8525 287.7422 c394.8848 287.4502 l394.7813 287.4404 394.623 287.3057 394.5371 287.1494 c391.3213 281.3574 lf/BBAccumShear (162.896027 270.000000) XT/BBAccumRotation (1.246088) XT0 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk389.1084 276.5332 m389.2539 276.2305 389.6025 275.8848 390.0811 275.792 C390.0879 275.79 390.0889 275.79 390.0967 275.7881 C390.6484 275.6797 391.167 275.9502 391.4072 276.2461 C391.4365 276.2773 L394.9268 280.8213 L395.3682 281.3955 395.2627 282.2178 394.6855 282.6582 c394.1123 283.0986 393.2871 282.9912 392.8477 282.4199 C390.5664 279.4531 L390.2637 280.04 389.8926 280.7617 V390.1318 280.9883 L390.7559 281.4678 390.8047 282.4316 390.2373 283.1299 C389.1367 284.6953 388.7402 285.1963 v387.8926 286.2744 385.9453 286.1816 385.21 286.0215 c384.7998 285.9326 384.498 285.6875 384.2783 285.3516 c382.4902 282.6182 377.6172 274.2822 Y377.2373 273.6611 377.4307 272.8525 378.0508 272.4785 c378.667 272.1006 379.4746 272.2939 379.8516 272.9092 C383.4531 278.6738 L383.4443 277.9258 383.4414 277.3379 Y379.9531 266.9268 L381.2754 266.7842 L379.5273 261.9473 L374.2979 256.0918 L373.7129 255.4404 373.7695 254.4385 374.4229 253.8525 c374.6777 253.626 374.9893 253.4951 375.3066 253.46 c375.7988 253.4063 376.3066 253.583 376.6611 253.9824 C381.9131 259.8613 L382.2021 260.2129 382.3369 260.4316 382.5039 260.8574 C384.5146 266.4346 L385.6689 266.3105 L388.9844 254.6035 L389.166 253.9658 389.7158 253.5283 390.3408 253.459 c390.5361 253.4395 390.7402 253.4551 390.9404 253.5117 c391.7842 253.752 392.2744 254.626 392.0332 255.4678 C389.0654 265.9443 L390.1758 265.8242 L388.6973 276.7705 L388.7344 276.9209 388.793 277.1533 V389.1084 276.5332 Lf379.1514 287.8877 m379.6279 288.1611 380.0684 287.9775 380.2705 287.7842 c380.5449 287.5195 380.374 287.1338 Y380.3203 287.7305 379.752 287.6641 v379.3809 287.6211 379.0264 287.0137 379.5078 286.6875 c380.0547 286.3184 380.5898 286.748 381.2715 287.3262 C380.5547 287.6387 380.0547 288.1445 379.7598 288.7314 c379.2158 289.8086 379.3994 291.7432 380.6504 292.1973 c381.4922 292.499 382.082 292.0859 382.2559 291.8184 c382.5557 291.3633 382.2148 290.8564 Y382.3008 291.6104 381.4512 291.7471 v381.0674 291.8076 380.5957 291.5469 380.4443 291.0957 C380.2646 290.6318 380.5186 289.9834 380.9678 289.7305 c381.6514 289.3457 383.0664 289.1807 383.9443 290.9053 c384.4961 291.9912 385.5 292.8408 386.8008 292.8955 c388.5947 292.9707 390.1113 291.5801 390.1855 289.7832 c390.2637 287.9902 388.8711 286.4736 387.0771 286.3975 c386.6602 286.377 386.2598 286.4443 385.8916 286.5703 C383.915 286.9092 383.3174 285.5791 382.1025 284.7539 c380.9883 283.998 379.8271 283.9287 378.8701 284.7422 c377.9258 285.5381 378.1895 287.3311 379.1514 287.8877 cf/BBAccumRotation (0.102440) XTu*u1 D373.582 273.0215 m370.0469 264.8105 L378.0859 261.3516 L381.6211 269.5586 L379.1279 270.6338 L379.5586 271.6289 L379.8613 272.334 379.6943 273.0879 378.5801 273.5645 c377.5283 274.0205 376.8057 273.6514 376.502 272.9434 C376.0723 271.9482 L376.0088 271.9746 L375.7051 271.5195 L376.0752 271.2725 L376.0186 270.2549 L374.375 267.793 L372.6543 268.9463 L374.2959 271.4033 L375.2139 271.8467 L375.5742 271.6064 L375.8613 272.0391 L373.582 273.0215 Lf/BBAccumRotation (0.408259) XT0 D378.668 270.8311 m376.5537 271.7412 L376.9648 272.6924 L377.1689 273.168 377.6738 273.3203 378.3594 273.0273 c379.0869 272.7139 379.2822 272.2578 379.0781 271.7813 C378.668 270.8311 Lf/BBAccumRotation (0.408259) XT*U/BBAccumRotation (0.408259) XT375.5156 271.3867 m375.5498 271.3633 375.5957 271.3701 375.6221 271.4033 C375.6484 271.4414 L375.6992 271.3691 375.7051 271.2686 375.6504 271.1914 c375.5791 271.0967 375.4453 271.0762 375.3516 271.1445 c375.2539 271.2129 375.2324 271.3486 375.3008 271.4424 c375.3535 271.5156 375.4434 271.5449 375.5264 271.5254 C375.5 271.4912 L375.4766 271.4561 375.4844 271.4111 375.5156 271.3867 cf/BBAccumRotation (0.443970) XTUUuu43.457 202.0898 m44.3198 201.1807 44.2158 199.6797 43.2192 198.7314 C40.0864 202.0225 L41.0825 202.9707 42.5952 203.002 43.457 202.0898 cf/BBAccumRotation (0.008010) XT*u1 D30.2578 208.4531 m31.7295 208.3652 32.2158 208.291 v32.3408 208.2715 32.5894 208.1299 32.7905 207.9121 c33.0908 207.5928 34.0215 206.6035 35.9595 204.5508 C38.9126 191.6445 L38.0854 189.1191 L38.0557 189.1211 38.0293 189.123 38.0015 189.123 c36.6016 189.123 35.4648 187.9893 35.4648 186.5908 c35.4648 185.1895 36.6016 184.0537 38.0015 184.0537 c39.4014 184.0537 40.5352 185.1895 40.5352 186.5908 c40.5352 187.6328 39.9014 188.5303 38.9951 188.918 C39.8555 191.5273 L47.022 192.874 L48.3257 191.5029 50.1431 189.9473 50.3193 189.0615 C49.1875 188.8076 48.3384 187.7988 48.3384 186.5908 c48.3384 185.1895 49.4717 184.0537 50.8706 184.0537 c52.271 184.0537 53.4053 185.1895 53.4053 186.5908 c53.4053 187.8467 52.4917 188.8818 51.2915 189.083 C51.1294 189.6621 50.7983 190.2588 50.2637 190.8408 c49.5425 191.625 33.7852 208.2139 33.3477 208.6729 C33.0718 208.9463 32.7251 209.1494 32.3408 209.2129 c31.75 209.3086 30.3359 209.3838 Y30.2578 208.4531 Lf0 D50.8706 187.5918 m51.4238 187.5918 51.8735 187.1416 51.8735 186.5908 c51.8735 186.0342 51.4238 185.5879 50.8706 185.5879 c50.3169 185.5879 49.8677 186.0342 49.8677 186.5908 c49.8677 187.1416 50.3169 187.5918 50.8706 187.5918 cf39.0039 186.5908 m39.0039 186.0342 38.5527 185.5879 38.0015 185.5879 c37.4458 185.5879 36.999 186.0342 36.999 186.5908 c36.999 187.1416 37.4458 187.5918 38.0015 187.5918 c38.5527 187.5918 39.0039 187.1416 39.0039 186.5908 cf*U45.6919 196.0889 m49.6025 191.8525 50.0469 191.5107 v50.4883 191.167 51.1357 191.3525 51.3433 191.625 c51.5518 191.8877 51.8799 192.3496 51.1943 193.0605 c50.5103 193.7695 48.7319 195.9014 48.1411 196.209 c47.4429 196.5781 45.6919 196.0889 yf/BBAccumRotation (0.329799) XTUu1 Ap0.3 g27.1406 215.2139 m27.0918 215.123 27.1143 215.0537 27.1924 215.0586 c29.4082 215.1807 l29.4839 215.1826 29.5903 215.2568 29.6382 215.3438 c31.4644 218.6143 l31.5107 218.7012 31.4868 218.7715 31.4102 218.7627 c29.1992 218.6475 l29.1191 218.6406 29.0156 218.5664 28.9668 218.4814 c27.1406 215.2139 lf/BBAccumShear (162.896027 270.000000) XT/BBAccumRotation (1.311843) XT0 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk10.6709 187.0088 m15.8853 192.749 L17.478 197.0869 L16.1733 197.2266 L19.6602 207.4189 L19.6724 209.2939 19.7153 210.6104 v19.8066 213.6855 19.9512 215.6035 21.4312 215.9199 c22.1689 216.0762 24.1006 216.1699 24.9468 215.1162 c25.3379 214.627 26.6162 212.832 26.6748 212.6895 C28.5293 215.9033 L28.8857 216.5254 29.687 216.7383 30.3076 216.3779 c30.9351 216.0234 31.146 215.2236 30.7886 214.5996 C28.2144 210.127 L29.1348 210.2705 30.0732 210.4199 30.5581 210.4844 c31.3252 210.5879 32.0132 210.1416 32.1377 209.3584 c32.2349 208.7354 31.9155 207.957 30.9541 207.8086 c29.7539 207.624 27.4268 207.2559 26.3906 207.127 c25.8633 207.0625 25.439 207.0908 24.9854 207.2363 C24.8857 206.8721 L26.3428 196.1631 L25.2051 196.2813 L28.1431 186.0313 L28.3784 185.2109 27.8921 184.3516 27.0498 184.1162 c26.8486 184.0586 26.6499 184.0459 26.4526 184.0615 c25.8335 184.1309 25.2837 184.5576 25.1074 185.1816 C21.8291 196.6357 L20.7036 196.751 L18.8403 191.6904 L18.6724 191.2744 18.542 191.0547 18.251 190.7109 C13.0166 184.9512 L12.667 184.5605 12.1582 184.3877 11.6699 184.4404 c11.3555 184.4697 11.0444 184.5986 10.7891 184.8223 c10.1426 185.3906 10.0874 186.373 10.6709 187.0088 Cf25.6318 220.7676 m25.0166 222.1807 23.4907 222.915 22.0444 222.583 C21.563 222.9873 20.8911 223.2539 20.2354 223.1172 c17.6304 222.5918 18.7612 217.7666 17.7192 217.3125 c17.6758 217.2939 17.626 217.2813 17.5718 217.2793 c17.0127 217.2529 16.8813 218.0303 17.0854 218.2803 c17.3877 218.6475 17.877 218.2617 Y17.7339 218.6826 17.3667 218.7432 v17.1538 218.7793 16.6978 218.7432 16.5132 218.0547 c16.2612 217.1016 17.0332 215.6035 18.2749 215.4287 c19.5869 215.2402 20.3213 215.9277 20.6313 217.1846 C21.5161 216.3818 22.8228 216.1191 23.9897 216.624 c25.5864 217.3193 26.3213 219.1709 25.6318 220.7676 cfUUu1 Ap0.3 g97.8809 64.1201 m97.8301 64.0273 97.8535 63.96 97.9341 63.9639 c100.1919 64.0869 l100.27 64.0889 100.3799 64.167 100.4287 64.2539 c102.2915 67.5918 l102.3379 67.6807 102.3125 67.75 102.2363 67.7441 c99.9785 67.624 l99.8979 67.6191 99.7925 67.543 99.7437 67.4541 c97.8809 64.1201 lf/BBAccumShear (162.896027 270.000000) XT/BBAccumRotation (1.311843) XTu0 Ap0.3 0.3 0.3 1 (Black) 0 0 Xk77.9565 35.0449 m85.4072 42.1299 L87.2251 48.2441 87.7729 50.5537 v88.124 52.0479 88.1177 59.9043 Y85.627 56.2041 85.5869 56.0098 V85.1069 54.1914 84.6689 52.374 84.3564 51.1709 c84.1787 50.46 83.5571 49.9883 82.8677 49.9482 C82.7178 49.9355 82.5591 49.9551 82.4092 49.9951 c81.5464 50.2061 81.022 51.0879 81.2397 51.9512 c81.54 53.1602 82.3096 56.2783 Y82.8105 58.3232 83.2168 58.6592 83.978 59.7168 c85.4727 61.7881 87.126 63.9873 Y87.6353 64.6611 88.3901 64.7588 88.8403 64.7676 c90.0054 64.7734 92.3164 64.7607 93.4814 64.7676 c93.957 64.7803 95.0903 64.7607 95.7202 63.8496 C96.5425 62.5557 97.5957 60.9219 V98.1621 62.0381 98.9658 63.7334 99.3672 64.5068 c99.7881 65.3213 100.6846 65.6953 101.5322 65.2813 c102.2173 64.9658 102.752 64.1162 102.251 63.0693 c101.6167 61.7754 99.9741 58.2617 99.3506 57.1836 c98.6865 56.04 97.1558 56.0713 96.583 57.002 c95.7349 58.3799 95.3501 59.0166 Y95.4707 51.6572 95.6104 50.6211 v95.6719 50.1152 100.5596 38.124 102.1855 34.4277 c102.6294 33.4043 102.1646 32.2021 101.1411 31.7559 C101.061 31.7158 100.9614 31.6904 100.8789 31.665 c99.917 31.3896 98.8872 31.8652 98.4834 32.7939 c96.8853 36.4365 91.8472 48.0078 Y90.0942 42.8574 89.3374 40.8486 v88.98 39.874 88.5488 39.2002 87.6987 38.3857 c85.9609 36.7178 80.4258 31.8594 Y79.5356 31.1865 78.2671 31.3281 77.5947 32.2227 c76.9058 33.1006 77.0684 34.373 77.9565 35.0449 Cf1 Ap91.7119 65.2891 m93.5723 65.3193 95.084 66.8438 95.0669 68.7168 c95.0459 70.5791 93.5195 72.0801 91.6421 72.0742 c89.7773 72.0635 88.2593 70.5244 88.2866 68.6514 c88.3037 66.7754 89.8364 65.2744 91.7119 65.2891 cf/BBAccumRotation (0.027932) XTUu0 Ap78.8423 48.5469 m77.9902 48.7686 76.0747 49.1963 75.8721 49.3271 c75.6963 49.4414 73.5928 51.8496 72.8887 52.6523 c72.5039 53.0928 72.1211 53.166 71.7109 53.1709 c70.9185 53.1816 69.5737 53.1982 68.7891 53.207 c68.4976 53.2109 68.0894 53.002 67.8696 52.8301 c66.5396 51.7813 64.6665 50.2617 Y64.2119 49.875 64.0869 49.7119 63.8691 49.0732 C63.2012 46.7754 62.9795 46.0059 v62.8164 45.458 63.1631 44.8936 63.7446 44.7432 c63.8481 44.7139 63.9541 44.7031 64.0557 44.7051 c64.5269 44.7119 64.9541 45.0117 65.0874 45.46 c65.3091 46.2334 65.916 48.3076 65.9834 48.543 c66.0151 48.6611 67.8418 50.1387 Y67.9414 46.6738 l65.8271 40.4688 L66.4634 40.2422 67.1401 40.0791 V66.2012 37.9063 64.7256 34.5439 64.229 33.4873 c63.9707 32.9287 64.2373 32.2842 64.8271 32.0322 c64.8799 32.0137 64.9287 31.9971 64.9858 31.9795 c65.5332 31.8301 66.1318 32.0879 66.3682 32.5908 c66.918 33.7559 68.6221 37.5127 69.6138 39.6416 C69.9712 39.6035 70.4678 39.5869 70.8145 39.623 C71.749 37.4658 73.3579 33.6777 73.876 32.5 c74.1001 31.9844 74.6943 31.7129 75.248 31.8525 c75.3032 31.8633 75.354 31.8779 75.4067 31.9033 c76.0029 32.1318 76.2842 32.7744 76.041 33.3369 c75.5718 34.4023 74.1782 37.7998 73.2969 39.999 C74.0493 40.1748 74.5801 40.3604 Y72.4614 46.6211 l72.7427 49.6826 L74.0112 48.1787 74.3223 47.8555 v74.6982 47.4668 75.0493 47.2549 75.5884 47.1074 c76.3984 46.8789 77.2734 46.6162 78.2334 46.4287 c79.0728 46.2656 79.6436 46.5908 79.7705 47.1475 c79.9395 47.8867 79.4829 48.373 78.8423 48.5469 cf/BBAccumRotation (0.027932) XTu63.9961 41.2607 m63.1631 41.54 61.5034 42.0967 60.6748 42.373 c60.271 42.5088 59.8101 42.8408 59.7402 43.1191 C59.6196 42.7598 59.478 42.3291 59.3555 41.9648 c59.2246 41.5762 59.2012 41.0859 59.77 40.8955 c60.9561 40.498 62.6768 39.9229 63.8652 39.5273 c64.4023 39.3477 64.6772 39.7559 64.8062 40.1475 c64.9326 40.5234 65.0723 40.9395 65.1885 41.2949 C64.8525 41.1318 64.438 41.1133 63.9961 41.2607 cf/BBAccumRotation (0.027932) XT*u1 D64.6665 43.8154 m64.4214 43.8975 L64.5566 44.7559 63.8589 45.0332 63.4526 45.1748 C63.0469 45.2998 62.292 45.502 61.916 44.7324 C61.6729 44.8135 L60.9814 45.0479 60.292 44.7646 60.0005 43.8867 C59.9409 43.7178 59.8564 43.4668 V59.958 43.0537 60.2837 42.752 60.7466 42.5908 c61.5776 42.3096 64.0723 41.4854 Y64.5776 41.3203 64.9961 41.3838 65.3027 41.6377 C65.3896 41.8994 65.4126 41.959 65.4507 42.0684 c65.7129 42.8662 65.4443 43.5547 64.6665 43.8154 Cf/BBAccumRotation (0.027932) XT0 D63.2983 44.71 m64.0049 44.4727 63.916 44.1621 63.9053 44.0693 C62.4106 44.5703 L62.459 44.6465 62.5967 44.9463 63.2983 44.71 Cf/BBAccumRotation (0.027932) XT*U/BBAccumRotation (0.027932) XTU70.4004 59.4521 m69.6602 59.458 68.9902 59.1875 68.4722 58.7412 C67.7573 59.209 66.9204 59.3779 66.1294 59.1182 c65.1401 58.7969 64.4697 57.9063 64.269 56.8262 C66.0557 56.2451 L66.3242 57.1563 66.9541 57.8896 67.8291 58.1689 c67.8735 58.1875 67.9204 58.1924 67.9668 58.207 C67.6431 57.7412 67.4487 57.1797 67.4424 56.5684 c67.417 54.957 68.709 53.6318 70.3242 53.6123 c71.9375 53.5889 73.2627 54.8809 73.2817 56.4961 c73.3008 58.1094 72.0132 59.4355 70.4004 59.4521 cf/BBAccumRotation (0.027932) XTUUu0.8 0.015686 0.31 0 k110.6055 348.939 m110.3965 356.6436 104.0898 362.8257 96.335 362.8257 c96.0996 362.8257 95.8652 362.8193 95.6318 362.8076 C93.7822 372.4307 85.3223 379.7017 75.1592 379.7017 c69.5215 379.7017 64.4111 377.4609 60.6572 373.8262 C57.4688 378.1748 52.3252 381 46.5186 381 c36.8389 381 28.9932 373.1538 28.9932 363.4746 c28.9932 363.1279 29.0059 362.7847 29.0264 362.4429 C27.9727 362.6904 26.876 362.8257 25.748 362.8257 c17.9932 362.8257 11.6865 356.6436 11.4775 348.939 C110.6055 348.939 Lfu1 Ap0 0 0 0 k78.2188 364.1816 m78.2188 365.7734 76.9287 367.064 75.3374 367.064 c73.7466 367.064 72.4556 365.7734 72.4556 364.1816 c72.4556 362.5913 73.7466 361.3003 75.3374 361.3003 c76.9287 361.3003 78.2188 362.5913 78.2188 364.1816 cf0 Ap75.3389 372.4106 m79.1953 372.4028 82.4146 369.7451 83.3052 366.1641 C85.4414 367.27 L84.1196 371.606 80.104 374.7651 75.3389 374.7651 c70.5693 374.7651 66.5527 371.606 65.2319 367.27 C67.3667 366.1641 L68.2588 369.7451 71.479 372.4028 75.3389 372.4106 cf75.3389 368.6206 m77.708 368.6167 79.6279 366.748 79.751 364.4038 C79.9038 364.4038 L81.9658 365.4712 L81.3623 368.6025 78.6431 370.9736 75.3389 370.9761 c72.0303 370.9736 69.313 368.6025 68.7095 365.4697 C70.7681 364.4038 L70.9229 364.4038 L71.0454 366.748 72.9629 368.6167 75.3389 368.6206 cfUUu0 0.73 0.996078 0 k130.9927 306.6079 m130.8496 311.8931 126.5239 316.1338 121.2046 316.1338 c121.0435 316.1338 120.8823 316.1299 120.7217 316.1221 C119.4531 322.7222 113.6494 327.71 106.6792 327.71 c102.812 327.71 99.3066 326.1729 96.731 323.6792 C94.5435 326.6626 91.0156 328.6006 87.0332 328.6006 c80.3931 328.6006 75.0112 323.2188 75.0112 316.5791 c75.0112 316.3418 75.02 316.1055 75.0342 315.8716 C74.311 316.041 73.5596 316.1338 72.7861 316.1338 c67.4653 316.1338 63.1396 311.8931 62.9966 306.6079 C130.9927 306.6079 Lfu1 Ap0 0 0 0 k89.2339 315.4551 m89.2339 316.6802 88.2402 317.6729 87.0161 317.6729 c85.7915 317.6729 84.7983 316.6802 84.7983 315.4551 c84.7983 314.2314 85.7915 313.2373 87.0161 313.2373 c88.2402 313.2373 89.2339 314.2314 89.2339 315.4551 cf0 Ap87.0171 321.7876 m89.9849 321.7822 92.4629 319.7358 93.1479 316.981 C94.792 317.8315 L93.7749 321.1689 90.6846 323.6001 87.0171 323.6001 c83.3457 323.6001 80.2549 321.1689 79.2383 317.8315 C80.8813 316.981 L81.5679 319.7358 84.0464 321.7822 87.0171 321.7876 cf87.0171 318.8716 m88.8403 318.8682 90.3179 317.4297 90.4126 315.626 C90.5303 315.626 L92.1172 316.4468 L91.6528 318.8574 89.5601 320.6826 87.0171 320.6841 c84.4712 320.6826 82.3794 318.8574 81.915 316.4458 C83.4995 315.626 L83.6182 315.626 L83.7124 317.4297 85.188 318.8682 87.0171 318.8716 cfUUu1 0.003922 0.384314 0 k144.2275 578.4771 m144.1128 582.7148 140.6445 586.1152 136.3779 586.1152 c136.2495 586.1152 136.1206 586.1118 135.9922 586.1055 C134.9746 591.3984 130.3213 595.3975 124.7319 595.3975 c121.6304 595.3975 118.8203 594.165 116.7554 592.166 C115.001 594.5581 112.1719 596.1118 108.9785 596.1118 c103.6543 596.1118 99.3389 591.7959 99.3389 586.4722 c99.3389 586.2822 99.3457 586.0928 99.3569 585.9048 C98.7778 586.0405 98.1748 586.1152 97.5537 586.1152 c93.2881 586.1152 89.8198 582.7148 89.7051 578.4771 C144.2275 578.4771 Lfu1 Ap0 0 0 0 k125.6548 586.2266 m125.6548 587.2061 124.8604 588.001 123.8799 588.001 c122.8999 588.001 122.105 587.2061 122.105 586.2266 c122.105 585.2456 122.8999 584.4512 123.8799 584.4512 c124.8604 584.4512 125.6548 585.2456 125.6548 586.2266 cf0 Ap123.8813 591.2944 m126.2559 591.29 128.2393 589.6523 128.7886 587.4463 C130.1035 588.1279 L129.2896 590.7988 126.8164 592.7446 123.8813 592.7446 c120.9429 592.7446 118.4692 590.7988 117.6558 588.1279 C118.9707 587.4463 L119.52 589.6523 121.5039 591.29 123.8813 591.2944 cf123.8813 588.9595 m125.3408 588.957 126.5234 587.8066 126.5981 586.3628 C126.6929 586.3628 L127.9624 587.02 L127.5913 588.9482 125.9165 590.4092 123.8813 590.4102 c121.8438 590.4092 120.1699 588.9482 119.7974 587.0195 C121.0659 586.3628 L121.1611 586.3628 L121.2368 587.8066 122.418 588.957 123.8813 588.9595 cfUUu0.2 0 1 0 k90.2729 549.6045 m90.1299 554.8926 85.8008 559.1357 80.4785 559.1357 c80.3174 559.1357 80.1563 559.1318 79.9961 559.1235 C78.7266 565.7285 72.9194 570.7188 65.9448 570.7188 c62.0752 570.7188 58.5674 569.1807 55.9907 566.686 C53.8022 569.6709 50.272 571.6099 46.2866 571.6099 c39.6426 571.6099 34.2578 566.2246 34.2578 559.5815 c34.2578 559.3433 34.2666 559.1079 34.2808 558.873 C33.5576 559.043 32.8047 559.1357 32.0308 559.1357 c26.708 559.1357 22.3789 554.8926 22.2358 549.6045 C90.2729 549.6045 Lfu1 Ap0 0 0 0 k49.9429 557.9766 m49.9429 559.2661 48.897 560.312 47.6074 560.312 c46.3179 560.312 45.272 559.2661 45.272 557.9766 c45.272 556.6875 46.3179 555.6411 47.6074 555.6411 c48.897 555.6411 49.9429 556.6875 49.9429 557.9766 cf0 Ap47.6084 564.6455 m50.7334 564.6392 53.3433 562.4854 54.0649 559.583 C55.7959 560.479 L54.7246 563.9932 51.4702 566.5532 47.6084 566.5532 c43.7437 566.5532 40.4878 563.9932 39.418 560.479 C41.1479 559.583 L41.8706 562.4854 44.4805 564.6392 47.6084 564.6455 cf47.6084 561.5732 m49.5283 561.5708 51.0845 560.0566 51.1841 558.1567 C51.3081 558.1567 L52.979 559.0215 L52.4902 561.5591 50.2861 563.481 47.6084 563.4834 c44.9277 563.481 42.7246 561.5591 42.2358 559.0205 C43.9048 558.1567 L44.0298 558.1567 L44.1294 560.0566 45.6831 561.5708 47.6084 561.5732 cfUUuu0 0.901961 0.34902 0 k235.3706 95 m235.2607 99.0303 231.9604 102.2686 227.9028 102.2686 c227.7798 102.2686 227.6572 102.2627 227.5347 102.2578 C226.5659 107.293 222.1396 111.0977 216.8213 111.0977 c213.8711 111.0977 211.1968 109.9248 209.2324 108.0225 C207.564 110.2988 204.8721 111.7773 201.834 111.7773 c196.7681 111.7773 192.6621 107.6738 192.6621 102.6064 c192.6621 102.4248 192.6694 102.2451 192.6792 102.0674 C192.1284 102.1963 191.5552 102.2686 190.9644 102.2686 c186.9063 102.2686 183.606 99.0303 183.4961 95 C235.3706 95 LfUu1 Ap0 0 0 0 k203.5083 102.207 m203.5083 103.1455 202.7466 103.9063 201.8086 103.9063 c200.8696 103.9063 200.1089 103.1455 200.1089 102.207 c200.1089 101.2686 200.8696 100.5078 201.8086 100.5078 c202.7466 100.5078 203.5083 101.2686 203.5083 102.207 cf0 Ap201.8091 107.0615 m204.084 107.0557 205.9839 105.4883 206.5088 103.377 C207.7686 104.0283 L206.9897 106.5859 204.6201 108.4492 201.8091 108.4492 c198.9961 108.4492 196.627 106.5859 195.8477 104.0283 C197.1064 103.377 L197.6328 105.4883 199.5322 107.0557 201.8091 107.0615 cf201.8091 104.8242 m203.207 104.8232 204.3394 103.7197 204.4121 102.3389 C204.5024 102.3389 L205.7188 102.9678 L205.3628 104.8135 203.7588 106.2139 201.8091 106.2148 c199.8579 106.2139 198.2549 104.8135 197.8989 102.9668 C199.1133 102.3389 L199.2046 102.3389 L199.2769 103.7197 200.4082 104.8232 201.8091 104.8242 cfUUu0.2 0 1 0 k597.333 126.5205 m597.1885 131.8682 592.8105 136.1592 587.4277 136.1592 c587.2637 136.1592 587.1016 136.1553 586.9385 136.1465 C585.6553 142.8262 579.7822 147.874 572.7275 147.874 c568.8154 147.874 565.2666 146.3184 562.6611 143.7949 C560.4482 146.8145 556.877 148.7754 552.8477 148.7754 c546.1279 148.7754 540.6826 143.3291 540.6826 136.6094 c540.6826 136.3691 540.6904 136.1318 540.7061 135.8936 C539.9727 136.0654 539.2119 136.1592 538.4297 136.1592 c533.0459 136.1592 528.668 131.8682 528.5234 126.5205 C597.333 126.5205 Lfu1 Ap0 0 0 0 k575.6211 133.8994 m575.6211 135.2842 574.498 136.4053 573.1152 136.4053 c571.7314 136.4053 570.6104 135.2842 570.6104 133.8994 c570.6104 132.5176 571.7314 131.3945 573.1152 131.3945 c574.498 131.3945 575.6211 132.5176 575.6211 133.8994 cf0 Ap573.1162 141.0537 m576.4678 141.0469 579.2686 138.7373 580.042 135.623 C581.8994 136.584 L580.75 140.3545 577.2588 143.1006 573.1162 143.1006 c568.9697 143.1006 565.4766 140.3545 564.3301 136.584 C566.1855 135.623 L566.9609 138.7373 569.7598 141.0469 573.1162 141.0537 cf573.1162 137.7588 m575.1768 137.7549 576.8447 136.1318 576.9521 134.0938 C577.084 134.0938 L578.8779 135.0205 L578.3525 137.7432 575.9883 139.8047 573.1162 139.8076 c570.2402 139.8047 567.877 137.7432 567.3516 135.0195 C569.1436 134.0938 L569.2764 134.0938 L569.3838 136.1318 571.0508 137.7549 573.1162 137.7588 cfUUu0 0.5 1 0 k374.6904 161.4219 m374.5625 166.1299 370.709 169.9102 365.9697 169.9102 c365.8242 169.9102 365.6816 169.9053 365.5381 169.8975 C364.4092 175.7793 359.2373 180.2236 353.0254 180.2236 c349.5811 180.2236 346.458 178.8525 344.1631 176.6318 C342.2139 179.29 339.0703 181.0166 335.5205 181.0166 c329.6074 181.0166 324.8115 176.2217 324.8115 170.3047 c324.8115 170.0938 324.8184 169.8838 324.833 169.6748 C324.1865 169.8271 323.5166 169.9102 322.8281 169.9102 c318.0869 169.9102 314.2334 166.1299 314.1055 161.4219 C374.6904 161.4219 Lfu1 Ap0 0 0 0 k339.0078 167.9209 m339.0078 169.1377 338.0205 170.126 336.8027 170.126 c335.583 170.126 334.5967 169.1377 334.5967 167.9209 c334.5967 166.7021 335.583 165.7139 336.8027 165.7139 c338.0205 165.7139 339.0078 166.7021 339.0078 167.9209 cf0 Ap336.8027 174.2188 m339.7539 174.2129 342.2207 172.1777 342.9014 169.4365 C344.5361 170.2832 L343.5244 173.6025 340.4521 176.0205 336.8027 176.0205 c333.1504 176.0205 330.0781 173.6025 329.0674 170.2832 C330.7012 169.4365 L331.3838 172.1777 333.8496 174.2129 336.8027 174.2188 cf336.8027 171.3164 m338.6172 171.3154 340.0859 169.8838 340.1816 168.0898 C340.2969 168.0898 L341.876 168.9072 L341.4131 171.3027 339.332 173.1191 336.8027 173.1201 c334.2695 173.1191 332.1885 171.3027 331.7266 168.9063 C333.3047 168.0898 L333.4238 168.0898 L333.5166 169.8838 334.9854 171.3154 336.8027 171.3164 cfUUu1 0.003922 0.384314 0 k511.3018 577.374 m511.1826 581.7896 507.5684 585.332 503.124 585.332 c502.9893 585.332 502.8555 585.3286 502.7217 585.3218 C501.6621 590.8359 496.8135 595.0024 490.9902 595.0024 c487.7588 595.0024 484.8311 593.7183 482.6797 591.6357 C480.8525 594.1279 477.9053 595.7466 474.5781 595.7466 c469.0303 595.7466 464.5352 591.2505 464.5352 585.7036 c464.5352 585.5049 464.542 585.3086 464.5537 585.1123 C463.9502 585.2544 463.3213 585.332 462.6758 585.332 c458.2314 585.332 454.6172 581.7896 454.498 577.374 C511.3018 577.374 Lfu1 Ap0 0 0 0 k475.9092 586.7095 m475.9092 587.6396 475.1553 588.3945 474.2246 588.3945 c473.2949 588.3945 472.54 587.6396 472.54 586.7095 c472.54 585.7793 473.2949 585.0249 474.2246 585.0249 c475.1553 585.0249 475.9092 585.7793 475.9092 586.7095 cf0 Ap474.2256 591.5205 m476.4805 591.5156 478.3623 589.9624 478.8838 587.8682 C480.1318 588.5146 L479.3594 591.0498 477.0117 592.897 474.2256 592.897 c471.4375 592.897 469.0889 591.0498 468.3174 588.5146 C469.5645 587.8682 L470.0869 589.9624 471.9688 591.5156 474.2256 591.5205 cf474.2256 589.3042 m475.6113 589.3027 476.7334 588.21 476.8057 586.8394 C476.8945 586.8394 L478.0996 587.4634 L477.748 589.2939 476.1572 590.6807 474.2256 590.6821 c472.292 590.6807 470.7021 589.2939 470.3496 587.4629 C471.5537 586.8394 L471.6436 586.8394 L471.7158 588.21 472.8369 589.3027 474.2256 589.3042 cfUUuu0 0.73 0.996078 0 k578.2803 522.2935 m578.1113 528.5342 573.0029 533.542 566.7217 533.542 c566.5313 533.542 566.3408 533.5366 566.1523 533.5273 C564.6533 541.3223 557.8008 547.2114 549.5693 547.2114 c545.002 547.2114 540.8633 545.3965 537.8223 542.4526 C535.2393 545.9746 531.0732 548.2637 526.3691 548.2637 c518.5293 548.2637 512.1738 541.9077 512.1738 534.0674 c512.1738 533.7866 512.1846 533.5088 512.2012 533.2314 C511.3477 533.4321 510.459 533.542 509.5459 533.542 c503.2637 533.542 498.1553 528.5342 497.9863 522.2935 C578.2803 522.2935 LfUu1 Ap0 0 0 0 k527.1855 534.0469 m527.1855 535.3164 526.1553 536.3472 524.8857 536.3472 c523.6143 536.3472 522.585 535.3164 522.585 534.0469 c522.585 532.7754 523.6143 531.7451 524.8857 531.7451 c526.1553 531.7451 527.1855 532.7754 527.1855 534.0469 cf0 Ap524.8857 540.6157 m527.9648 540.6089 530.5352 538.4878 531.2461 535.6279 C532.9521 536.5112 L531.8965 539.9727 528.6904 542.4951 524.8857 542.4951 c521.0781 542.4951 517.8711 539.9727 516.8174 536.5112 C518.5225 535.6279 L519.2334 538.4878 521.8047 540.6089 524.8857 540.6157 cf524.8857 537.5889 m526.7773 537.5869 528.3096 536.0942 528.4092 534.2236 C528.5313 534.2236 L530.1768 535.0752 L529.6953 537.5752 527.5234 539.4683 524.8857 539.4707 c522.2451 539.4683 520.0752 537.5752 519.5928 535.0752 C521.2383 534.2236 L521.3594 534.2236 L521.459 536.0942 522.9893 537.5869 524.8857 537.5889 cfUUu0 0.901961 0.34902 0 k417.0605 559.5542 m416.8916 565.7949 411.7832 570.8022 405.501 570.8022 c405.3105 570.8022 405.1211 570.7974 404.9316 570.7876 C403.4336 578.5825 396.582 584.4722 388.3486 584.4722 c383.7822 584.4722 379.6426 582.6572 376.6025 579.7129 C374.0195 583.2354 369.8525 585.5234 365.1504 585.5234 c357.3086 585.5234 350.9541 579.168 350.9541 571.3281 c350.9541 571.0474 350.9639 570.7695 350.9814 570.4922 C350.127 570.6929 349.2383 570.8022 348.3252 570.8022 c342.0439 570.8022 336.9355 565.7949 336.7666 559.5542 C417.0605 559.5542 Lfu1 Ap0 0 0 0 k366.7764 573.0161 m366.7764 574.3271 365.7139 575.3896 364.4033 575.3896 c363.0938 575.3896 362.0303 574.3271 362.0303 573.0161 c362.0303 571.7061 363.0938 570.6431 364.4033 570.6431 c365.7139 570.6431 366.7764 571.7061 366.7764 573.0161 cf0 Ap364.4043 579.792 m367.5811 579.7852 370.2314 577.5977 370.9648 574.6484 C372.7236 575.5596 L371.6357 579.1299 368.3281 581.731 364.4043 581.731 c360.4775 581.731 357.1699 579.1299 356.082 575.5596 C357.8398 574.6484 L358.5742 577.5977 361.2256 579.7852 364.4043 579.792 cf364.4043 576.6704 m366.3545 576.668 367.9375 575.1294 368.0381 573.1992 C368.1641 573.1992 L369.8613 574.0776 L369.3643 576.6558 367.126 578.6094 364.4043 578.6113 c361.6807 578.6094 359.4424 576.6558 358.9453 574.0776 C360.6416 573.1992 L360.7676 573.1992 L360.8691 575.1294 362.4482 576.668 364.4043 576.6704 cfUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF